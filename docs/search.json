[{"path":"https://gianluca-sottile.github.io/islasso/articles/islasso-intro.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"An Introduction to islasso","text":"short note present briefly discuss R package islasso dealing regression models large number covariates. Estimation carried penalizing coefficients via quasi-lasso penalty, wherein nonsmooth lasso penalty replaced smooth counterpart determined iteratively data according induced smoothing idea. package includes functions estimate model test linear hypothesis linear combinations relevant coefficients. illustrate R code throughout worked example, avoiding intentionally report details extended bibliography.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/articles/islasso-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An Introduction to islasso","text":"Let \\mathbf{y} = \\mathbf{X}\\beta + \\mathbf{\\epsilon} linear model interest usual zero-means homoscedastic errors. usual, \\mathbf{y} = (y_1,\\ldots,y_n)^T response vector, \\mathbf{X} n \\times p design matrix (p quite large) regression coefficients \\mathbf{\\beta}. interest lies selecting non-noise covariates estimating relevant effect, one assumes lasso penalized objective function (Tibshirani, 1996), \\frac{1}{2}||\\mathbf{y}-\\mathbf{X}\\mathbf{\\beta}||_2^2+\\lambda||\\mathbf{\\beta}||_1","code":""},{"path":"https://gianluca-sottile.github.io/islasso/articles/islasso-intro.html","id":"the-r-functions","dir":"Articles","previous_headings":"","what":"The R functions","title":"An Introduction to islasso","text":"main function package islasso() user supplies model formula usual lm glm functions, .e. islasso.path used fit regularization path via induced smoothed lasso framework, .e. family accepts specification family link function Table 1, lambda tuning parameter, alpha elastic-net mixing parameter, nlambda number lambda values, lambda.min.ratio smallest value lambda (fraction lambda.max), unpenalized allows indicate covariates unpenalized coefficients. Table 1. Families link functions allowed islasso fitter functions reads whose actually implements estimating algorithm described paper. lambda argument islasso.fit islasso specifies positive tuning parameter penalized objective. non-negative value can provided, missing, computed via K-fold cross validation function cv.glmnet() package glmnet. number folds used can specified via argument nfolds auxiliary function .control(). lambda argument islasso.path.fit islasso.path specifies sequence positive tuning parameters, user supplied automatically computed based nlambda lambda.min.ratio.","code":"islasso(formula, family = gaussian, lambda, alpha = 1, data, weights, subset,         offset, unpenalized, contrasts = NULL, control = is.control()) islasso.path(formula, family = gaussian, lambda = NULL, nlambda = 100,               lambda.min.ratio = ifelse(nobs < nvars, 1E-3, 1E-05), alpha = 1,               data, weights, subset, offset, unpenalized, contrasts = NULL, control = is.control()) islasso.fit(X, y, family = gaussian(), lambda, alpha = 1, intercept = FALSE,              weights = NULL, offset = NULL, unpenalized = NULL, control = is.control()) islasso.path.fit(X, y, family = gaussian(), lambda, nlambda, lambda.min.ratio,                   alpha = 1, intercept = FALSE, weights = NULL, offset = NULL,                   unpenalized = NULL, control = is.control())"},{"path":"https://gianluca-sottile.github.io/islasso/articles/islasso-intro.html","id":"a-worked-example-the-prostate-data-set","dir":"Articles","previous_headings":"","what":"A worked example: the Prostate data set","title":"An Introduction to islasso","text":"Prostate dataset well-known benchmark regression analysis variable selection, originally published Stamey et al. (1989). contains clinical measurements 97 male patients diagnosed prostate cancer. primary goal model level prostate-specific antigen (PSA) based several predictive variables, including: lcavol: log cancer volume lweight: log prostate weight age: patient’s age lbph: log benign prostatic hyperplasia amount svi: seminal vesicle invasion lcp: log capsular penetration gleason: Gleason score (histological grade tumor) pgg45: percent Gleason scores 4 5 response variable lpsa, logarithm PSA levels. dataset particularly useful testing due moderate size presence multicollinearity among predictors. select important terms regression equation simply apply lasso using R package glmnet Ten-fold cross validation “selects” \\lambda= 3.797. corresponding 7 non null coefficients last three estimates reasonable question “selected” coefficients significant model. Unfortunately lasso regression return standard errors due nonsmoothness objective, alternative approaches proposed., including (Lockhart et al., 2013). Among () strategies, including ‘covariance test’, ‘post-selection inference’ ‘(modified) residual bootstrap’, illustrate R package islasso implementing recent `quasi’ lasso approach based induced smoothing idea (Brown Wang, 2005) discussed Cilluffo et al. (2019) optimal lambda selected (without supplying value lambda), use optimal value minimizing specific criterion chosen AIC, BIC, AICc, eBIC, GCV GIC. version 1.4.0 R package islasso optimal strategy built regularization path choose best tuning parameter one criteria listed using function GoF.islasso.path, e.g.,  Using also regularization path usefull insights coefficients, standard errors gradient profile  selected best lambda value minimizing example AIC criterion, last step strategy consists fitting new islasso model. summary method quickly returns main output fitted model, including point estimates, standard errors p-values. Visualizing estimates covariates somewhat inconvenient, especially number covariates large, thus decide print estimates pvalue less threshold value. use 0.10 addition usual information printed summary method, output also includes column Df representing degrees freedom coefficient. sum used quantify model complexity corresponding residual degrees freedom () reported . Wald test (column z value) p-values can used assess important significant covariates. Results suggest variables lcavol, lweight svi informative predict measure logarithm PSA levels, lbph borderline informative. Just clear, another way obtain similar result without computing regularization path, use function aic.islasso requires preliminary islasso fit object specification criterion used. Hence Comparisons methods select tuning parameter discussions scope short note. conclude note emphasizing islasso also accepts -called elastic-net penalty,  \\frac{1}{2}||\\mathbf{y}- \\mathbf{X\\beta}||_2^{2}+\\lambda \\{ \\alpha ||\\mathbf{\\beta} ||^{}_1 + \\frac{1}{2}(1-\\alpha) ||\\mathbf{\\beta} ||^{2}_2 \\}  0\\le \\alpha\\le 1 mixing parameter specified islasso() islasso.path() via argument alpha, e.g.","code":"library(islasso) #> Loading required package: glmnet #> Loading required package: Matrix #> Loaded glmnet 4.1-10 #>  #> +----------------------------------------------+ #> |          Welcome to *islasso*                | #> |  The Induced Smoothed Lasso for R            | #> |  Hypothesis testing in high-dimensional data | #> +----------------------------------------------+ #>   data(\"Prostate\", package = \"islasso\") x <- model.matrix(lpsa ~ ., data = Prostate)[, -1] y <- Prostate$lpsa a1 <- cv.glmnet(x, y, family = \"gaussian\") n <- nrow(Prostate) a1$lambda.min * n #> [1] 3.797398  b <- drop(coef(a1, \"lambda.min\", exact = TRUE)) length(b[b != 0]) #> [1] 7 names(b[b != 0]) #> [1] \"(Intercept)\" \"lcavol\"      \"lweight\"     \"age\"         \"lbph\"        #> [6] \"svi\"         \"pgg45\" tail(b[b != 0], n = 3) #>        lbph         svi       pgg45  #> 0.069318034 0.592326060 0.002184294 out <- islasso.path(lpsa ~ ., data = Prostate, nlambda = 50L, family = gaussian()) out #>  #> Call: #> islasso.path(formula = lpsa ~ ., family = gaussian(), nlambda = 50L,  #>     data = Prostate) #>  #> Coefficients: #>       lambda     df    phi deviance    logLik #> 1     0.1333 8.9761 0.5018  44.1676 -100.4811 #> 2     0.1608 8.9710 0.5018  44.1696 -100.4833 #> 3     0.1941 8.9649 0.5018  44.1725 -100.4865 #> 4     0.2342 8.9573 0.5018  44.1767 -100.4912 #> 5     0.2825 8.9481 0.5018  44.1829 -100.4979 #> 6     0.3409 8.9368 0.5018  44.1918 -100.5077 #> 7     0.4113 8.9228 0.5019  44.2046 -100.5218 #> 8     0.4962 8.9056 0.5020  44.2232 -100.5421 #> 9     0.5987 8.8842 0.5022  44.2500 -100.5715 #> 10    0.7224 8.8576 0.5025  44.2885 -100.6137 #> 11    0.8716 8.8244 0.5029  44.3437 -100.6741 #> 12    1.0516 8.7826 0.5036  44.4225 -100.7602 #> 13    1.2688 8.7299 0.5045  44.5340 -100.8819 #> 14    1.5309 8.0067 0.5021  44.6791 -101.0396 #> 15    1.8471 7.9204 0.5038  44.8820 -101.2594 #> 16    2.2286 7.8248 0.5065  45.1655 -101.5647 #> 17    2.6889 7.7136 0.5102  45.5561 -101.9823 #> 18    3.2443 6.9726 0.5114  46.0426 -102.4975 #> 19    3.9145 6.7585 0.5158  46.5469 -103.0259 #> 20    4.7230 6.6541 0.5230  47.2510 -103.7541 #> 21    5.6985 6.5271 0.5330  48.2219 -104.7405 #> 22    6.8755 6.6267 0.5486  49.5782 -106.0858 #> 23    8.2956 6.1845 0.5656  51.3675 -107.8053 #> 24   10.0091 5.7038 0.5838  53.2999 -109.5964 #> 25   12.0764 5.2903 0.5997  54.9973 -111.1169 #> 26   14.5708 4.9208 0.6146  56.5942 -112.5050 #> 27   17.5803 4.6441 0.6288  58.0776 -113.7599 #> 28   21.2115 3.7489 0.6423  59.8984 -115.2571 #> 29   25.5927 3.4034 0.6649  62.2319 -117.1106 #> 30   30.8788 3.3301 0.6981  65.3864 -119.5088 #> 31   37.2567 3.2587 0.7418  69.5331 -122.4910 #> 32   44.9520 3.6938 0.8058  75.1879 -126.2831 #> 33   54.2367 3.5160 0.8870  82.9182 -131.0295 #> 34   65.4392 3.1442 0.9892  92.8465 -136.5145 #> 35   78.9555 2.6256 1.1001 103.8176 -141.9314 #> 36   95.2636 2.4779 1.1127 105.1725 -142.5603 #> 37  114.9401 2.3613 1.1124 105.2762 -142.6080 #> 38  138.6807 2.1349 1.1106 105.3552 -142.6444 #> 39  167.3248 2.0283 1.1105 105.4700 -142.6972 #> 40  201.8854 2.0023 1.1120 105.6370 -142.7740 #> 41  243.5843 1.9998 1.1145 105.8802 -142.8855 #> 42  293.8961 1.9993 1.1182 106.2340 -143.0473 #> 43  354.5996 1.9981 1.1236 106.7486 -143.2817 #> 44  427.8413 2.0038 1.1316 107.4951 -143.6196 #> 45  516.2109 1.9858 1.1427 108.5750 -144.1044 #> 46  622.8330 1.9603 1.1586 110.1161 -144.7880 #> 47  751.4777 1.9013 1.1806 112.2704 -145.7277 #> 48  906.6936 1.7895 1.2099 115.1909 -146.9732 #> 49 1093.9690 1.5932 1.2478 119.0497 -148.5713 #> 50 1319.9257 1.2931 1.2953 123.9704 -150.5356 lmb.best <- GoF.islasso.path(out) lmb.best$lambda.min #>       AIC       BIC      AICc      eBIC       GCV       GIC  #>  1.530907  3.244343 25.592682  3.914454  3.244343  3.244343 p1 <- plot(out, yvar = \"coefficients\") p2 <- plot(out, yvar = \"se\") p3 <- plot(out, yvar = \"gradient\") gridExtra::grid.arrange(p1, p2, p3, ncol = 1L) lambda.aic <- lmb.best$lambda.min[\"AIC\"] out2 <- islasso(lpsa ~ ., data = Prostate, lambda = lambda.aic, family = gaussian()) out2 #>  #> Call: #> islasso(formula = lpsa ~ ., family = gaussian(), lambda = lambda.aic,  #>     data = Prostate) #>  #> Coefficients: #> (Intercept)       lcavol      lweight          age         lbph          svi   #>    1.074451     0.573820     0.389617    -0.016542     0.100958     0.572844   #>         lcp      gleason        pgg45   #>   -0.046512     0.000001     0.004925   #>  #> Degrees of Freedom: 96 Total (i.e. Null); 88.99 Residual #> Null Deviance: 127.9  #> Residual Deviance: 44.68  #> AIC: 218.1  #> Lambda: 1.531 summary(out2, pval = 0.10) #>  #> Call: #> islasso(formula = lpsa ~ ., family = gaussian(), lambda = lambda.aic,  #>     data = Prostate) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.65308 -0.37468 -0.01048  0.37197  1.64352  #>  #>             Estimate Std. Error    Df z value Pr(>|z|)     #> (Intercept)  1.07445    0.83950 1.000   1.280   0.2006     #> lcavol       0.57382    0.08430 1.000   6.807 9.96e-12 *** #> lweight      0.38962    0.16573 0.987   2.351   0.0187 *   #> lbph         0.10096    0.05725 0.985   1.763   0.0778 .   #> svi          0.57284    0.23416 0.985   2.446   0.0144 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.502056) #>  #>     Null deviance: 127.92  on 96.00  degrees of freedom #> Residual deviance:  44.68  on 88.99  degrees of freedom #> AIC: 218.09 #> Lambda: 1.5309 #>  #> Number of Newton-Raphson iterations: 10 sum(out2$internal$hi) #> [1] 8.006674 lambda.aic2 <- aic.islasso(out2, method = \"AIC\", interval = c(.1, 50)) #>  #> Optimization through AIC #>  #> lambda =   19.1601 AIC =   237.91885  #> lambda =   30.9399 AIC =   245.77014  #> lambda =   11.8798 AIC =   232.62143  #> lambda =    7.3803 AIC =   226.34327  #> lambda =    4.5995 AIC =   220.59405  #> lambda =    2.8808 AIC =   219.66168  #> lambda =    2.9398 AIC =   219.75098  #> lambda =    1.8186 AIC =   218.32970  #> lambda =    1.1622 AIC =   219.15069  #> lambda =    1.9195 AIC =   218.43005  #> lambda =    1.7013 AIC =   218.22646  #> lambda =    1.4954 AIC =   218.06882  #> lambda =    1.3681 AIC =   217.98620  #> lambda =    1.2894 AIC =   219.23594  #> lambda =    1.4167 AIC =   218.01779  #> lambda =    1.3381 AIC =   217.96882  #> lambda =    1.3195 AIC =   219.25523  #> lambda =    1.3495 AIC =   217.96997  #> lambda =    1.3418 AIC =   217.97021  #> lambda =    1.3310 AIC =   219.26258  #> lambda =    1.3354 AIC =   219.26402  #> lambda =    1.3395 AIC =   217.96808  #> lambda =    1.3404 AIC =   217.96696  #> lambda =    1.3410 AIC =   217.97116  #> lambda =    1.3401 AIC =   217.96616  #> lambda =    1.3400 AIC =   217.96475  #> lambda =    1.3398 AIC =   217.96822  #> lambda =    1.3399 AIC =   217.97010  #> lambda =    1.3400 AIC =   217.96475 out3 <- update(out2, lambda = lambda.aic2) summary(out3, pval = .10) #>  #> Call: #> islasso(formula = lpsa ~ ., family = gaussian(), lambda = lambda.aic2,  #>     data = Prostate) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.66294 -0.37527 -0.01031  0.38855  1.64233  #>  #>             Estimate Std. Error    Df z value Pr(>|z|)     #> (Intercept)  1.05960    0.84619 1.000   1.252   0.2105     #> lcavol       0.57584    0.08498 1.000   6.776 1.23e-11 *** #> lweight      0.39689    0.16643 0.990   2.385   0.0171 *   #> lbph         0.10178    0.05749 0.987   1.771   0.0766 .   #> svi          0.59518    0.23648 0.989   2.517   0.0118 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.5011429) #>  #>     Null deviance: 127.918  on 96.00  degrees of freedom #> Residual deviance:  44.572  on 88.94  degrees of freedom #> AIC: 217.96 #> Lambda: 1.34 #>  #> Number of Newton-Raphson iterations: 10 # update the islasso path to fit an elastic-net model out4 <- update(out, alpha = .5) out4 #>  #> Call: #> islasso.path(formula = lpsa ~ ., family = gaussian(), nlambda = 50L,  #>     alpha = 0.5, data = Prostate) #>  #> Coefficients: #>       lambda     df    phi deviance    logLik #> 1     0.2666 8.9540 0.5017  44.1702 -100.4840 #> 2     0.3217 8.9445 0.5017  44.1733 -100.4874 #> 3     0.3881 8.9328 0.5016  44.1779 -100.4925 #> 4     0.4683 8.9188 0.5016  44.1845 -100.4997 #> 5     0.5650 8.9017 0.5016  44.1941 -100.5102 #> 6     0.6817 8.8810 0.5017  44.2078 -100.5253 #> 7     0.8226 8.8558 0.5018  44.2275 -100.5469 #> 8     0.9925 8.8251 0.5019  44.2557 -100.5778 #> 9     1.1974 8.7878 0.5022  44.2959 -100.6218 #> 10    1.4448 8.7423 0.5025  44.3529 -100.6841 #> 11    1.7432 8.6868 0.5031  44.4332 -100.7720 #> 12    2.1032 8.6191 0.5040  44.5458 -100.8947 #> 13    2.5377 8.5365 0.5053  44.7017 -101.0641 #> 14    3.0618 7.8238 0.5036  44.9049 -101.2841 #> 15    3.6942 7.7078 0.5060  45.1809 -101.5813 #> 16    4.4573 7.5819 0.5094  45.5527 -101.9787 #> 17    5.3779 6.8248 0.5098  45.9746 -102.4259 #> 18    6.4887 6.6362 0.5138  46.4262 -102.8999 #> 19    7.8289 6.6102 0.5205  47.0458 -103.5429 #> 20    9.4459 6.8886 0.5319  47.9332 -104.4493 #> 21   11.3970 6.6206 0.5438  49.1459 -105.6610 #> 22   13.7510 6.3072 0.5588  50.6764 -107.1484 #> 23   16.5912 5.9402 0.5774  52.5775 -108.9345 #> 24   20.0181 5.5303 0.5989  54.7831 -110.9276 #> 25   24.1528 5.1570 0.6207  57.0024 -112.8535 #> 26   29.1415 4.8164 0.6435  59.3193 -114.7859 #> 27   35.1606 3.8405 0.6614  61.6176 -116.6295 #> 28   42.4230 3.5911 0.6886  64.3186 -118.7102 #> 29   51.1854 3.4481 0.7246  67.7886 -121.2586 #> 30   61.7576 3.6817 0.7731  72.1477 -124.2812 #> 31   74.5135 3.4501 0.8260  77.2703 -127.6081 #> 32   89.9040 3.3208 0.8884  83.2288 -131.2108 #> 33  108.4735 3.1424 0.9596  90.0654 -135.0396 #> 34  130.8784 2.8654 1.0348  97.4128 -138.8430 #> 35  157.9111 2.5229 1.1029 104.2028 -142.1110 #> 36  190.5272 2.3829 1.1127 105.2810 -142.6102 #> 37  229.8802 2.2673 1.1132 105.4538 -142.6898 #> 38  277.3614 2.0977 1.1128 105.6061 -142.7598 #> 39  334.6497 1.9705 1.1136 105.8208 -142.8583 #> 40  403.7708 1.9332 1.1163 106.1233 -142.9967 #> 41  487.1687 1.9177 1.1206 106.5466 -143.1898 #> 42  587.7922 1.9018 1.1266 107.1346 -143.4567 #> 43  709.1992 1.8830 1.1349 107.9438 -143.8217 #> 44  855.6826 1.8684 1.1462 109.0445 -144.3137 #> 45 1032.4218 1.8282 1.1613 110.5205 -144.9658 #> 46 1245.6661 1.7808 1.1810 112.4538 -145.8069 #> 47 1502.9554 1.7051 1.2058 114.9033 -146.8519 #> 48 1813.3873 1.5916 1.2355 117.8800 -148.0924 #> 49 2187.9381 1.4229 1.2698 121.3653 -149.5056 #> 50 2639.8515 1.1963 1.3073 125.2452 -151.0318  # some diagnostic plot p4 <- plot(out4, yvar = \"coefficients\") p5 <- plot(out4, yvar = \"se\") gridExtra::grid.arrange(p4, p5, ncol = 1L) # select the best tuning parameter lmb.best2 <- GoF.islasso.path(out4) lmb.best2$lambda.min #>       AIC       BIC      AICc      eBIC       GCV       GIC  #>  3.061814  5.377894 42.422996  6.488685  5.377894  5.377894  # fit a new islasso model with elastic-net penalty lambda.aic3 <- lmb.best2$lambda.min[\"AIC\"] out5 <- update(out2, alpha = .5, lambda = lambda.aic3) summary(out5, pval = .10) #>  #> Call: #> islasso(formula = lpsa ~ ., family = gaussian(), lambda = lambda.aic3,  #>     alpha = 0.5, data = Prostate) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.63555 -0.36932  0.00011  0.39077  1.63160  #>  #>             Estimate Std. Error    Df z value Pr(>|z|)     #> (Intercept)  1.09123    0.82617 1.000   1.321   0.1866     #> lcavol       0.56168    0.08145 0.975   6.896 5.35e-12 *** #> lweight      0.38098    0.15899 0.948   2.396   0.0166 *   #> lbph         0.09957    0.05610 0.971   1.775   0.0759 .   #> svi          0.53984    0.21749 0.920   2.482   0.0131 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.503556) #>  #>     Null deviance: 127.918  on 96.00  degrees of freedom #> Residual deviance:  44.905  on 89.18  degrees of freedom #> AIC: 218.22 #> Lambda: 3.0618 #>  #> Number of Newton-Raphson iterations: 10  # or select the best tuning parameter using AIC with an islasso object lambda.aic4 <- aic.islasso(out5, method = \"AIC\", interval = c(.1, 100)) #>  #> Optimization through AIC #>  #> lambda =   38.2584 AIC =   242.28062  #> lambda =   61.8416 AIC =   255.97650  #> lambda =   23.6832 AIC =   235.66356  #> lambda =   14.6752 AIC =   227.83485  #> lambda =    9.1080 AIC =   222.34228  #> lambda =    5.6672 AIC =   218.58817  #> lambda =    3.5407 AIC =   218.48045  #> lambda =    4.4685 AIC =   219.13421  #> lambda =    2.2265 AIC =   219.07120  #> lambda =    4.4297 AIC =   219.09585  #> lambda =    3.0387 AIC =   218.20451  #> lambda =    2.7285 AIC =   218.05736  #> lambda =    2.5367 AIC =   219.19927  #> lambda =    2.8470 AIC =   218.11420  #> lambda =    2.6553 AIC =   219.24969  #> lambda =    2.7738 AIC =   218.09241  #> lambda =    2.7005 AIC =   218.04309  #> lambda =    2.6832 AIC =   219.26164  #> lambda =    2.7112 AIC =   218.04643  #> lambda =    2.6922 AIC =   219.25501  #> lambda =    2.7046 AIC =   218.04976  #> lambda =    2.6973 AIC =   218.04238  #> lambda =    2.6954 AIC =   218.04531  #> lambda =    2.6986 AIC =   218.04668  #> lambda =    2.6966 AIC =   218.04283  #> lambda =    2.6978 AIC =   218.04661  #> lambda =    2.6971 AIC =   218.04656  #> lambda =    2.6975 AIC =   218.04465  #> lambda =    2.6972 AIC =   218.04045  #> lambda =    2.6972 AIC =   218.04733  #> lambda =    2.6973 AIC =   218.04122  #> lambda =    2.6972 AIC =   218.04045 out6 <- update(out5, lambda = lambda.aic4) summary(out6, pval = .10) #>  #> Call: #> islasso(formula = lpsa ~ ., family = gaussian(), lambda = lambda.aic4,  #>     alpha = 0.5, data = Prostate) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.64659 -0.37033 -0.00621  0.36601  1.63182  #>  #>             Estimate Std. Error    Df z value Pr(>|z|)     #> (Intercept)  1.07554    0.83321 1.000   1.291   0.1968     #> lcavol       0.56489    0.08237 0.977   6.858 6.99e-12 *** #> lweight      0.38879    0.16028 0.954   2.426   0.0153 *   #> lbph         0.10048    0.05643 0.974   1.781   0.0750 .   #> svi          0.56322    0.22116 0.930   2.547   0.0109 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.5023252) #>  #>     Null deviance: 127.918  on 96.00  degrees of freedom #> Residual deviance:  44.762  on 89.11  degrees of freedom #> AIC: 218.04 #> Lambda: 2.6972 #>  #> Number of Newton-Raphson iterations: 10"},{"path":"https://gianluca-sottile.github.io/islasso/articles/islasso-intro.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"An Introduction to islasso","text":"Tibshirani R. Regression shrinkage selection via lasso. J R Stat Soc: Series B 1996; 58: 267–288 Cilluffo, G, Sottile, G, La Grutta, S Muggeo, VMR (2019) Induced Smoothed lasso: practical framework hypothesis testing high dimensional regression. Statistical Methods Medical Research, online doi: 10.1177/0962280219842890. Brown B Wang Y. Standard errors covariance matrices smoothed rank estimators. Biometrika 2005; 92: 149–158.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gianluca Sottile. Author, maintainer. Giovanna Cilluffo. Author, contributor. Vito MR Muggeo. Author, contributor.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cilluffo G, Sottile G, La Grutta S, Muggeo V (2020). “Induced Smoothed lasso: practical framework hypothesis testing high dimensional regression.” Statistical Methods Medical Research, 29(3), 765–777. doi:10.1177/0962280219842890. Cilluffo G, Sottile G, Muggeo V (2019). R package islasso: estimation hypothesis testing lasso regression, volume 0 number 0. doi:10.13140/RG.2.2.16360.11521.","code":"@Article{,   title = {The Induced Smoothed lasso: A practical framework for hypothesis testing in high dimensional regression},   author = {Giovanna Cilluffo and Gianluca Sottile and Stefania {La Grutta} and Vito MR Muggeo},   journal = {Statistical Methods in Medical Research},   year = {2020},   volume = {29},   number = {3},   pages = {765--777},   doi = {10.1177/0962280219842890}, } @Manual{,   title = {The R package islasso: estimation and hypothesis testing in lasso regression},   author = {Giovanna Cilluffo and Gianluca Sottile and Vito MR Muggeo},   journal = {Researchgate},   year = {2019},   volume = {0},   number = {0},   pages = {1--10},   doi = {10.13140/RG.2.2.16360.11521}, }"},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"package-installation","dir":"","previous_headings":"","what":"📦 Installation","title":"islasso","text":"can install development version islasso GitHub: installed, load package:","code":"# install.packages(\"devtools\") devtools::install_github(\"gianluca-sottile/islasso\") library(islasso)"},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"mag-description","dir":"","previous_headings":"","what":"🔍 Description","title":"islasso","text":"islasso implements Induced Smoothed Lasso, robust interpretable approach hypothesis testing high-dimensional linear generalized linear models. Key features include: Efficient Fortran backend fast computation Support Gaussian, Binomial, Poisson, Gamma families Smoothed penalization stable inference Automatic selection active variables Visualization tools powered ggplot2","code":""},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"rocket-quick-example","dir":"","previous_headings":"","what":"🚀 Quick Example","title":"islasso","text":"","code":"set.seed(123) sim <- simulXy(n = 100, p = 20, family = \"gaussian\") mod <- islasso(y ~ ., data = sim$data) summary(mod) plot(mod)"},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"books-documentation","dir":"","previous_headings":"","what":"📚 Documentation","title":"islasso","text":"📘 Function reference: ?islasso 📄 Vignette: vignette(\"islasso-intro\") 🌐 Website: https://gianluca-sottile.github.io/islasso","code":""},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"open_book-references","dir":"","previous_headings":"","what":"📖 References","title":"islasso","text":"Cilluffo G, Sottile G, La Grutta S, Muggeo V (2020). Induced Smoothed lasso: practical framework hypothesis testing high dimensional regression. Statistical Methods Medical Research_, 29(3), 765-777. doi:10.1177/0962280219842890","code":""},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"handshake-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"islasso","text":"Feel free open issues, suggest improvements, submit pull requests. Bug reports feature requests welcome!","code":""},{"path":"https://gianluca-sottile.github.io/islasso/index.html","id":"scroll-license","dir":"","previous_headings":"","what":"📜 License","title":"islasso","text":"islasso © 2019 Gianluca Sottile licensed CC 4.0","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"Extracts tuning parameter lambda minimizing multiple information criteria fitted islasso.path object. Supported criteria include AIC, BIC, AICc, eBIC, GCV, GIC.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"","code":"GoF.islasso.path(object, plot = TRUE, ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"object fitted model class \"islasso.path\". plot Logical. TRUE (default), displays plots criterion lambda path. ... Additional arguments passed lower-level plotting diagnostic methods.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"list components: gof Matrix goodness--fit values across lambda values. minimum Index positions minimum criterion. lambda.min Optimal lambda values minimize criterion.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"function identifies optimal regularization parameter lambda minimizing various information-based selection criteria. Degrees freedom computed trace hat matrix, may fractional induced smoothing. provides robust alternative cross-validation, especially high-dimensional settings.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/GoF.islasso.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Optimal Lambda via Goodness-of-Fit Criteria — GoF.islasso.path","text":"","code":"set.seed(1) n <- 100; p <- 30 beta <- c(runif(10, -2, 2), rep(0, p - 10)) sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) fit <- islasso.path(y ~ ., data = sim$data, family = gaussian()) GoF.islasso.path(fit)  #> $gof #>             AIC      BIC      AICc     eBIC      GCV      GIC #>   [1,] 344.8518 425.5860 3260.2150 532.0052 593.9714 445.3931 #>   [2,] 344.8500 425.5817 3259.9984 531.9977 593.9552 445.3882 #>   [3,] 344.8479 425.5769 3259.7597 531.9894 593.9374 445.3828 #>   [4,] 344.8456 425.5716 3259.4928 531.9801 593.9175 445.3767 #>   [5,] 344.8431 425.5657 3259.1978 531.9698 593.8955 445.3700 #>   [6,] 344.8403 425.5593 3258.8742 531.9585 593.8713 445.3627 #>   [7,] 344.8372 425.5522 3258.5191 531.9461 593.8449 445.3546 #>   [8,] 344.8339 425.5445 3258.1294 531.9326 593.8158 445.3458 #>   [9,] 344.8303 425.5360 3257.7018 531.9177 593.7839 445.3361 #>  [10,] 344.8262 425.5266 3257.2305 531.9013 593.7488 445.3254 #>  [11,] 344.8219 425.5164 3256.7162 531.8834 593.7105 445.3138 #>  [12,] 344.8170 425.5052 3256.1514 531.8637 593.6685 445.3010 #>  [13,] 344.8118 425.4929 3255.5313 531.8422 593.6224 445.2870 #>  [14,] 344.8060 425.4794 3254.8478 531.8184 593.5715 445.2715 #>  [15,] 344.7997 425.4646 3254.1018 531.7925 593.5161 445.2547 #>  [16,] 344.7928 425.4484 3253.2825 531.7641 593.4552 445.2362 #>  [17,] 344.7852 425.4306 3252.3790 531.7327 593.3882 445.2159 #>  [18,] 344.7770 425.4111 3251.3929 531.6985 593.3151 445.1937 #>  [19,] 344.7679 425.3897 3250.3052 531.6608 593.2345 445.1692 #>  [20,] 344.7580 425.3664 3249.1176 531.6197 593.1466 445.1426 #>  [21,] 344.7472 425.3407 3247.8073 531.5744 593.0497 445.1132 #>  [22,] 344.7354 425.3126 3246.3768 531.5249 592.9440 445.0812 #>  [23,] 344.7225 425.2818 3244.7982 531.4704 592.8276 445.0459 #>  [24,] 344.7084 425.2480 3243.0676 531.4107 592.7001 445.0074 #>  [25,] 344.6932 425.2112 3241.1769 531.3455 592.5610 444.9653 #>  [26,] 344.6764 425.1707 3239.0896 531.2737 592.4077 444.9190 #>  [27,] 344.6582 425.1264 3236.8007 531.1950 592.2399 444.8683 #>  [28,] 344.6384 425.0780 3234.2894 531.1089 592.0562 444.8128 #>  [29,] 344.6169 425.0250 3231.5332 531.0145 591.8549 444.7521 #>  [30,] 344.5935 424.9671 3228.5078 530.9110 591.6346 444.6857 #>  [31,] 344.5682 424.9038 3225.1866 530.7977 591.3933 444.6131 #>  [32,] 344.5407 424.8346 3221.5404 530.6736 591.1291 444.5337 #>  [33,] 344.5108 424.7588 3217.5204 530.5370 590.8388 444.4466 #>  [34,] 344.4788 424.6764 3213.1330 530.3884 590.5230 444.3519 #>  [35,] 344.4441 424.5861 3208.2906 530.2248 590.1757 444.2480 #>  [36,] 344.4068 424.4878 3202.9812 530.0460 589.7964 444.1346 #>  [37,] 344.3667 424.3807 3197.1548 529.8505 589.3821 444.0111 #>  [38,] 344.3238 424.2641 3190.7587 529.6367 588.9294 443.8764 #>  [39,] 344.2781 424.1372 3183.7359 529.4029 588.4349 443.7296 #>  [40,] 344.2293 423.9991 3176.0246 529.1472 587.8949 443.5696 #>  [41,] 344.1768 423.8480 3167.5202 528.8661 587.3021 443.3943 #>  [42,] 342.4509 419.8368 2974.8888 521.8426 572.7934 438.8225 #>  [43,] 342.3552 419.5734 2961.1482 521.3581 571.8125 438.5179 #>  [44,] 342.2654 419.3150 2947.3850 520.8773 570.8417 438.2181 #>  [45,] 342.1657 419.0231 2931.7616 520.3320 569.7437 437.8790 #>  [46,] 342.0760 418.7417 2916.2622 519.7981 568.6718 437.5506 #>  [47,] 341.9899 418.4540 2900.0324 519.2446 567.5643 437.2135 #>  [48,] 341.9028 418.1464 2882.3658 518.6463 566.3710 436.8517 #>  [49,] 341.8074 417.7985 2862.2442 517.9656 565.0182 436.4419 #>  [50,] 341.7543 417.5234 2844.6765 517.3979 563.8946 436.1124 #>  [51,] 341.7070 417.2341 2825.6360 516.7897 562.6950 435.7637 #>  [52,] 341.6638 416.9229 2804.6713 516.1253 561.3897 435.3868 #>  [53,] 340.0503 412.9502 2624.0547 509.0427 547.7409 430.8353 #>  [54,] 340.0137 412.5674 2598.5204 508.2035 546.1651 430.3675 #>  [55,] 339.9996 412.1796 2571.2088 507.3232 544.5221 429.8880 #>  [56,] 340.0119 411.7972 2542.6290 506.4206 542.8478 429.4088 #>  [57,] 338.5380 407.9071 2371.4958 499.3456 529.9186 424.9260 #>  [58,] 338.5976 407.4700 2337.7943 498.2536 527.9897 424.3669 #>  [59,] 338.7092 407.0403 2301.5595 497.1105 525.9887 423.8045 #>  [60,] 338.8837 406.6313 2263.0423 495.9324 523.9461 423.2524 #>  [61,] 339.1278 406.2397 2221.7144 494.7029 521.8358 422.7048 #>  [62,] 339.4479 405.8687 2177.5184 493.4209 519.6588 422.1642 #>  [63,] 338.5773 402.5444 2024.2216 486.8622 508.5448 418.2379 #>  [64,] 339.1569 402.3694 1979.6532 485.6926 506.6829 417.8778 #>  [65,] 339.8634 402.2255 1930.4316 484.4277 504.6928 417.5252 #>  [66,] 339.5143 399.3822 1789.3538 478.2967 494.8630 414.0700 #>  [67,] 340.5223 399.4146 1737.5826 477.0432 493.0190 413.8631 #>  [68,] 339.6438 394.6916 1540.6641 467.2525 478.0742 408.1969 #>  [69,] 341.1542 395.1469 1491.6152 466.3171 476.8943 408.3933 #>  [70,] 342.9131 395.7245 1438.3696 465.3376 475.6789 408.6811 #>  [71,] 344.9600 396.5071 1383.3962 464.4536 474.6302 409.1535 #>  [72,] 347.3140 397.5048 1326.6648 463.6635 473.7376 409.8185 #>  [73,] 349.9967 398.7450 1268.8295 463.0022 473.0414 410.7048 #>  [74,] 353.0119 400.2369 1210.4856 462.4862 472.5517 411.8230 #>  [75,] 354.3793 397.4867 1058.6479 454.3084 461.3238 408.0625 #>  [76,] 356.8227 396.9392  960.9334 449.8185 455.5101 406.7813 #>  [77,] 360.3045 398.2637  897.7395 448.2993 453.7622 407.5765 #>  [78,] 364.7950 401.3166  860.3133 449.4573 455.5236 410.2767 #>  [79,] 369.7306 404.7077  822.4028 450.8126 457.4733 413.2889 #>  [80,] 375.1416 408.5393  786.2950 452.5622 459.8474 416.7330 #>  [81,] 381.0222 412.8062  752.1034 454.7020 462.6173 420.6040 #>  [82,] 387.2646 417.2803  717.1030 456.8453 465.2548 424.6443 #>  [83,] 394.0636 422.4138  687.5502 459.7835 468.7744 429.3692 #>  [84,] 401.4904 428.2976  663.4081 463.6332 473.3049 434.8743 #>  [85,] 409.5076 434.8453  643.2134 468.2439 478.6307 441.0615 #>  [86,] 417.9681 441.7280  623.3543 473.0470 483.9832 447.5572 #>  [87,] 426.8405 448.9992  605.5309 478.2076 489.5697 454.4356 #>  [88,] 436.0899 456.7146  591.0983 483.9010 495.6256 461.7746 #>  [89,] 445.6813 464.9395  581.1248 490.3245 502.4339 469.6642 #>  [90,] 455.6308 473.8274  576.8541 497.8130 510.4830 478.2917 #>  [91,] 465.9895 483.1907  574.6475 505.8643 519.0660 487.4108 #>  [92,] 476.6809 493.0720  575.6531 514.6777 528.5102 497.0933 #>  [93,] 487.5438 503.0492  576.4780 523.4877 537.7465 506.8533 #>  [94,] 498.3487 512.6903  574.9529 531.5945 545.7749 516.2088 #>  [95,] 508.8468 521.7118  571.1986 538.6697 552.1576 524.8680 #>  [96,] 518.8586 529.9566  566.1610 544.5852 556.7642 532.6793 #>  [97,] 527.9878 537.2451  561.8927 549.4477 559.9704 539.5163 #>  [98,] 536.2179 543.6657  559.1670 553.4829 562.1846 545.4929 #>  [99,] 543.5435 549.1808  557.6835 556.6116 563.3318 550.5639 #> [100,] 549.1749 553.2876  557.5319 558.7086 563.6739 554.2965 #>  #> $minimum #>  AIC  BIC AICc eBIC  GCV  GIC  #>   57   68  100   77   77   76  #>  #> $lambda.min #>        AIC        BIC       AICc       eBIC        GCV        GIC  #>   3.080924   8.563382 167.562870  19.764636  19.764636  18.010610  #>  #> $plot  #>"},{"path":"https://gianluca-sottile.github.io/islasso/reference/Prostate.html","id":null,"dir":"Reference","previous_headings":"","what":"Prostate Cancer Data — Prostate","title":"Prostate Cancer Data — Prostate","text":"dataset originates study examining correlation prostate-specific antigen levels various clinical measures men scheduled radical prostatectomy. contains 97 rows 9 variables.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/Prostate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prostate Cancer Data — Prostate","text":"data frame 97 observations 9 variables: lcavol Log cancer volume lweight Log prostate weight age Age patient lbph Log benign prostatic hyperplasia amount svi Seminal vesicle invasion (binary) lcp Log capsular penetration gleason Gleason score pgg45 Percentage Gleason scores 4 5 lpsa Log prostate-specific antigen","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/Prostate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prostate Cancer Data — Prostate","text":"Stamey, T.., et al. (1989). Prostate specific antigen diagnosis treatment adenocarcinoma prostate: II. radical prostatectomy treated patients. Journal Urology, 141(5), 1076-1083.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/Prostate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prostate Cancer Data — Prostate","text":"Stamey, T.., Kabalin, J.N., McNeal, J.E., Johnstone, .M., Freiha, F., Redwine, E.., Yang, N. (1989). Journal Urology, 141(5), 1076-1083.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/Prostate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prostate Cancer Data — Prostate","text":"","code":"data(Prostate) summary(Prostate) #>      lcavol           lweight           age             lbph         #>  Min.   :-1.3471   Min.   :2.375   Min.   :41.00   Min.   :-1.3863   #>  1st Qu.: 0.5128   1st Qu.:3.376   1st Qu.:60.00   1st Qu.:-1.3863   #>  Median : 1.4469   Median :3.623   Median :65.00   Median : 0.3001   #>  Mean   : 1.3500   Mean   :3.653   Mean   :63.87   Mean   : 0.1004   #>  3rd Qu.: 2.1270   3rd Qu.:3.878   3rd Qu.:68.00   3rd Qu.: 1.5581   #>  Max.   : 3.8210   Max.   :6.108   Max.   :79.00   Max.   : 2.3263   #>       svi              lcp             gleason          pgg45        #>  Min.   :0.0000   Min.   :-1.3863   Min.   :6.000   Min.   :  0.00   #>  1st Qu.:0.0000   1st Qu.:-1.3863   1st Qu.:6.000   1st Qu.:  0.00   #>  Median :0.0000   Median :-0.7985   Median :7.000   Median : 15.00   #>  Mean   :0.2165   Mean   :-0.1794   Mean   :6.753   Mean   : 24.38   #>  3rd Qu.:0.0000   3rd Qu.: 1.1787   3rd Qu.:7.000   3rd Qu.: 40.00   #>  Max.   :1.0000   Max.   : 2.9042   Max.   :9.000   Max.   :100.00   #>       lpsa         #>  Min.   :-0.4308   #>  1st Qu.: 1.7317   #>  Median : 2.5915   #>  Mean   : 2.4784   #>  3rd Qu.: 3.0564   #>  Max.   : 5.5829   cor(Prostate$lpsa, Prostate$lcavol) #> [1] 0.7344603 if (FALSE) { # \\dontrun{   fit <- islasso(lpsa ~ ., data = Prostate, family = gaussian())   summary(fit, pval = 0.05)   lambda.aic <- aic.islasso(fit, method = \"AIC\")   fit.aic <- update(fit, lambda = lambda.aic)   summary(fit.aic, pval = 0.05) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization for Lambda Selection — aic.islasso","title":"Optimization for Lambda Selection — aic.islasso","text":"Minimizes information criteria select optimal tuning parameter lambda islasso models. Supports AIC, BIC, AICc, GCV, GIC.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization for Lambda Selection — aic.islasso","text":"","code":"aic.islasso(   object,   method = c(\"AIC\", \"BIC\", \"AICc\", \"GCV\", \"GIC\"),   interval,   g = 0,   y,   X,   intercept = FALSE,   family = gaussian(),   alpha = 1,   offset,   weights,   unpenalized,   control = is.control(),   trace = TRUE )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization for Lambda Selection — aic.islasso","text":"object Fitted model class \"islasso\". method Criterion minimize. Options \"AIC\", \"BIC\", \"AICc\", \"GCV\", \"GIC\". interval Numeric vector (length 2) giving lower upper bounds lambda optimization. Optional object includes prior cross-validation. g Numeric [0,1]. Governs BIC generalization: g = 0 classic BIC, g = 0.5 extended BIC. y Response vector. Required object missing. X Design matrix. Required object missing. intercept Logical. Whether include intercept X. Used object missing. family Error distribution. Accepted: gaussian, binomial, poisson. Uses canonical link. alpha Elastic-net mixing parameter, 0 <= alpha <= 1. Lasso: alpha = 1; Ridge: alpha = 0. offset Optional numeric vector. Adds known linear predictor component. weights Optional weights observations. Defaults 1. unpenalized Logical vector indicating variables exclude penalization. control List control parameters. See .control. trace Logical. TRUE, prints progress optimization. Default TRUE.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimization for Lambda Selection — aic.islasso","text":"Optimal lambda value numeric.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization for Lambda Selection — aic.islasso","text":"Instead using cross-validation, function selects best lambda minimizing criteria like AIC BIC. Degrees freedom computed trace hat matrix (necessarily integer).","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Optimization for Lambda Selection — aic.islasso","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/aic.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimization for Lambda Selection — aic.islasso","text":"","code":"set.seed(1) n <- 100; p <- 100 beta <- c(rep(2, 20), rep(0, p - 20)) sim1 <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) o <- islasso(y ~ ., data = sim1$data, family = gaussian())  if (FALSE) { # \\dontrun{ # Use the evaluation interval of the fit lambda_aic <- aic.islasso(o, method = \"AIC\")  # Overwrites the evaluation interval for lambda lambda_bic <- aic.islasso(o, interval = c(0.1, 30), method = \"BIC\")  # Overwrites the evaluation interval for lambda using eBIC criterion lambda_ebic <- aic.islasso(o, interval = c(0.1, 30), method = \"BIC\", g = 0.5) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"General Linear Hypotheses for islasso Models — anova.islasso","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"Tests general linear hypotheses computes confidence intervals linear combinations coefficients fitted islasso model.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"","code":"# S3 method for class 'islasso' anova(object, A, b = NULL, ci, ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"object fitted model object class \"islasso\". Hypothesis specification. Either: numeric matrix vector row specifying linear combination coefficients, character vector symbolic expressions (e.g. \"X1 + X2 = 3\"). b Right-hand side vector null hypotheses %*% beta = b. omitted, defaults zeros. ci Optional 2-column matrix confidence intervals coefficients. ... Currently unused.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"object class \"anova.islasso\" containing: Estimate Linear combination estimates SE Standard errors Wald Wald statistics p-value Associated p-values","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"method tests null hypothesis \\(H_0: \\beta = b\\), \\(\\) \\(b\\) define linear constraint model coefficients. Symbolic expressions support natural syntax: coefficients may added/subtracted, constants may multiplied (e.g. \"2 * X1 + 3 * X2 = 7\"). Equations omitted = assume zero right-hand side. See examples syntax flexibility.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/anova.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Linear Hypotheses for islasso Models — anova.islasso","text":"","code":"n <- 100; p <- 100 beta <- c(runif(10, -2, 2), rep(0, p - 10)) sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) fit <- islasso(y ~ . -1, data = sim$data, family = gaussian())  # Test if first 5 variables sum to -7.5 anova(fit, A = c(\"X1 + X2 + X3 + X4 + X5 = -7.5\")) #>  #> \t Simultaneous Tests for General Linear Combination #>  #> Fit: islasso(formula = y ~ . - 1, family = gaussian(), data = sim$data) #>  #> Linear Hypothesis: #>                                         Estimate Std. Error Chisq Pr(>Chisq) #> 1*X1 + 1*X2 + 1*X3 + 1*X4 + 1*X5 = -7.5   8.6889     0.2046  1804     <2e-16 #>                                             #> 1*X1 + 1*X2 + 1*X3 + 1*X4 + 1*X5 = -7.5 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>   # Test multiple hypotheses anova(fit, A = c(\"X1 + X2 + X3 + X4 + X5\", \"X6 + X7 + X8 + X9 + X10\"), b = c(-7.5, 8.75)) #>  #> \t Simultaneous Tests for General Linear Combination #>  #> Fit: islasso(formula = y ~ . - 1, family = gaussian(), data = sim$data) #>  #> Linear Hypothesis: #>                                          Estimate Std. Error Chisq Pr(>Chisq) #> 1*X1 + 1*X2 + 1*X3 + 1*X4 + 1*X5 = -7.5    8.6889     0.2046  1804     <2e-16 #> 1*X6 + 1*X7 + 1*X8 + 1*X9 + 1*X10 = 8.75  -7.2290     0.2005  1300     <2e-16 #> Overall                                                       3210     <2e-16 #>                                              #> 1*X1 + 1*X2 + 1*X3 + 1*X4 + 1*X5 = -7.5  *** #> 1*X6 + 1*X7 + 1*X8 + 1*X9 + 1*X10 = 8.75 *** #> Overall                                  *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>   # Full diagonal comparison to true coefficients anova(fit, A = diag(p), b = beta) #>  #> \t Simultaneous Tests for General Linear Combination #>  #> Fit: islasso(formula = y ~ . - 1, family = gaussian(), data = sim$data) #>  #> Linear Hypothesis: #>                             Estimate Std. Error  Chisq Pr(>Chisq)   #> 1*X1 = 1.07044170238078   -1.898e-01  9.555e-02  3.945     0.0470 * #> 1*X2 = 1.46746669057757   -1.315e-01  9.738e-02  1.822     0.1770   #> 1*X3 = 1.37849498912692   -8.651e-02  9.660e-02  0.802     0.3705   #> 1*X4 = -1.24812392890453   2.785e-02  9.769e-02  0.081     0.7756   #> 1*X5 = -1.32358047738671   2.241e-01  9.571e-02  5.481     0.0192 * #> 1*X6 = -1.40233596228063   1.196e-01  9.415e-02  1.612     0.2042   #> 1*X7 = 1.66532131284475   -1.570e-01  9.281e-02  2.861     0.0907 . #> 1*X8 = 1.35188855323941   -4.620e-02  9.753e-02  0.224     0.6357   #> 1*X9 = 0.984678914770484  -7.577e-02  1.015e-01  0.557     0.4553   #> 1*X10 = -1.03049966692924  1.113e-01  9.653e-02  1.331     0.2487   #> 1*X11 = 0                  2.360e-02  5.570e-02  0.180     0.6717   #> 1*X12 = 0                  5.831e-07  1.211e-02  0.000     1.0000   #> 1*X13 = 0                 -7.058e-07  1.444e-02  0.000     1.0000   #> 1*X14 = 0                  2.483e-07  5.215e-03  0.000     1.0000   #> 1*X15 = 0                  2.263e-07  4.732e-03  0.000     1.0000   #> 1*X16 = 0                 -4.995e-02  6.628e-02  0.568     0.4511   #> 1*X17 = 0                 -2.436e-07  5.088e-03  0.000     1.0000   #> 1*X18 = 0                 -5.081e-07  1.054e-02  0.000     1.0000   #> 1*X19 = 0                 -7.312e-02  7.117e-02  1.055     0.3043   #> 1*X20 = 0                  1.273e-01  8.391e-02  2.302     0.1292   #> 1*X21 = 0                  5.185e-02  6.571e-02  0.623     0.4300   #> 1*X22 = 0                 -2.218e-02  5.654e-02  0.154     0.6949   #> 1*X23 = 0                 -9.959e-07  2.037e-02  0.000     1.0000   #> 1*X24 = 0                  6.174e-02  6.624e-02  0.869     0.3514   #> 1*X25 = 0                  2.907e-02  5.794e-02  0.252     0.6158   #> 1*X26 = 0                  2.765e-02  5.748e-02  0.231     0.6305   #> 1*X27 = 0                 -1.419e-02  5.408e-02  0.069     0.7930   #> 1*X28 = 0                 -1.479e-07  3.094e-03  0.000     1.0000   #> 1*X29 = 0                  7.998e-02  7.077e-02  1.277     0.2584   #> 1*X30 = 0                  4.085e-02  6.114e-02  0.446     0.5040   #> 1*X31 = 0                 -6.110e-07  1.275e-02  0.000     1.0000   #> 1*X32 = 0                 -4.996e-03  4.930e-02  0.010     0.9193   #> 1*X33 = 0                  2.913e-07  6.016e-03  0.000     1.0000   #> 1*X34 = 0                  3.487e-02  6.111e-02  0.326     0.5682   #> 1*X35 = 0                 -3.521e-08  1.847e-03  0.000     1.0000   #> 1*X36 = 0                  7.732e-07  1.596e-02  0.000     1.0000   #> 1*X37 = 0                  1.381e-07  2.894e-03  0.000     1.0000   #> 1*X38 = 0                 -4.978e-07  1.032e-02  0.000     1.0000   #> 1*X39 = 0                  1.856e-07  3.886e-03  0.000     1.0000   #> 1*X40 = 0                 -8.699e-07  1.776e-02  0.000     1.0000   #> 1*X41 = 0                  5.036e-03  5.031e-02  0.010     0.9203   #> 1*X42 = 0                  1.607e-02  5.373e-02  0.089     0.7648   #> 1*X43 = 0                  1.392e-02  5.449e-02  0.065     0.7984   #> 1*X44 = 0                 -4.935e-02  6.393e-02  0.596     0.4401   #> 1*X45 = 0                 -2.718e-02  5.794e-02  0.220     0.6390   #> 1*X46 = 0                  1.534e-07  3.227e-03  0.000     1.0000   #> 1*X47 = 0                  2.998e-02  5.548e-02  0.292     0.5889   #> 1*X48 = 0                  9.617e-07  1.982e-02  0.000     1.0000   #> 1*X49 = 0                 -6.510e-07  1.353e-02  0.000     1.0000   #> 1*X50 = 0                  2.632e-02  5.521e-02  0.227     0.6336   #> 1*X51 = 0                  8.672e-07  1.780e-02  0.000     1.0000   #> 1*X52 = 0                  5.487e-02  6.595e-02  0.692     0.4054   #> 1*X53 = 0                 -6.527e-02  6.943e-02  0.884     0.3471   #> 1*X54 = 0                  8.401e-02  7.365e-02  1.301     0.2540   #> 1*X55 = 0                 -1.469e-07  3.058e-03  0.000     1.0000   #> 1*X56 = 0                 -4.802e-02  6.277e-02  0.585     0.4443   #> 1*X57 = 0                 -4.176e-02  5.967e-02  0.490     0.4840   #> 1*X58 = 0                  3.396e-02  5.925e-02  0.329     0.5665   #> 1*X59 = 0                 -5.697e-07  1.193e-02  0.000     1.0000   #> 1*X60 = 0                 -3.835e-02  6.081e-02  0.398     0.5282   #> 1*X61 = 0                  7.258e-02  7.118e-02  1.040     0.3079   #> 1*X62 = 0                  1.642e-02  5.378e-02  0.093     0.7601   #> 1*X63 = 0                  3.058e-02  5.686e-02  0.289     0.5907   #> 1*X64 = 0                  3.150e-07  6.568e-03  0.000     1.0000   #> 1*X65 = 0                  1.689e-02  5.107e-02  0.109     0.7408   #> 1*X66 = 0                  2.390e-07  4.978e-03  0.000     1.0000   #> 1*X67 = 0                  1.168e-02  5.445e-02  0.046     0.8302   #> 1*X68 = 0                 -5.281e-07  1.087e-02  0.000     1.0000   #> 1*X69 = 0                  7.394e-07  1.536e-02  0.000     1.0000   #> 1*X70 = 0                  5.679e-02  6.667e-02  0.726     0.3943   #> 1*X71 = 0                 -2.834e-07  5.919e-03  0.000     1.0000   #> 1*X72 = 0                  9.920e-07  2.034e-02  0.000     1.0000   #> 1*X73 = 0                  2.856e-02  5.608e-02  0.259     0.6106   #> 1*X74 = 0                 -1.096e-07  2.281e-03  0.000     1.0000   #> 1*X75 = 0                  1.078e-02  5.238e-02  0.042     0.8370   #> 1*X76 = 0                  8.778e-07  1.799e-02  0.000     1.0000   #> 1*X77 = 0                 -3.590e-07  7.535e-03  0.000     1.0000   #> 1*X78 = 0                  2.366e-07  4.962e-03  0.000     1.0000   #> 1*X79 = 0                  2.358e-02  5.534e-02  0.182     0.6701   #> 1*X80 = 0                 -3.931e-02  5.947e-02  0.437     0.5087   #> 1*X81 = 0                  1.324e-02  5.536e-02  0.057     0.8109   #> 1*X82 = 0                  6.608e-07  1.373e-02  0.000     1.0000   #> 1*X83 = 0                 -1.488e-01  8.902e-02  2.793     0.0947 . #> 1*X84 = 0                  4.263e-02  6.113e-02  0.486     0.4855   #> 1*X85 = 0                  5.055e-02  6.484e-02  0.608     0.4356   #> 1*X86 = 0                  9.589e-07  1.951e-02  0.000     1.0000   #> 1*X87 = 0                 -7.796e-02  7.056e-02  1.221     0.2692   #> 1*X88 = 0                  4.014e-07  8.348e-03  0.000     1.0000   #> 1*X89 = 0                 -1.119e-01  7.866e-02  2.025     0.1547   #> 1*X90 = 0                  1.693e-07  3.538e-03  0.000     1.0000   #> 1*X91 = 0                  1.197e-07  2.506e-03  0.000     1.0000   #> 1*X92 = 0                 -2.345e-02  5.585e-02  0.176     0.6746   #> 1*X93 = 0                  6.268e-07  1.296e-02  0.000     1.0000   #> 1*X94 = 0                 -2.174e-02  5.758e-02  0.142     0.7058   #> 1*X95 = 0                  9.456e-07  1.952e-02  0.000     1.0000   #> 1*X96 = 0                  3.366e-07  6.998e-03  0.000     1.0000   #> 1*X97 = 0                  2.035e-06  4.033e-02  0.000     1.0000   #> 1*X98 = 0                 -8.191e-07  1.673e-02  0.000     1.0000   #> 1*X99 = 0                 -8.863e-07  1.827e-02  0.000     1.0000   #> 1*X100 = 0                -4.135e-07  8.578e-03  0.000     1.0000   #> Overall                                         44.858     1.0000   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>"},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":null,"dir":"Reference","previous_headings":"","what":"Breast Cancer microarray experiment — breast","title":"Breast Cancer microarray experiment — breast","text":"data set details microarray experiment 52 breast cancer patients. binary variable status indicates whether patient died breast cancer (status = 0: die, status = 1: died). variables represent amplification deletion specific genes.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Breast Cancer microarray experiment — breast","text":"data frame 52 rows multiple variables, including binary status gene-level measurements.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Breast Cancer microarray experiment — breast","text":"Dr. John Bartlett Dr. Caroline Witton, Division Cancer Sciences Molecular Pathology, University Glasgow, Glasgow Royal Infirmary.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breast Cancer microarray experiment — breast","text":"Unlike gene expression studies, experiment focuses measuring gene amplification deletion-number DNA copies given genomic sequence. goal identify key genomic markers distinguishing aggressive non-aggressive breast cancer. experiment conducted Dr. John Bartlett Dr. Caroline Witton Division Cancer Sciences Molecular Pathology University Glasgow's Royal Infirmary.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Breast Cancer microarray experiment — breast","text":"Augugliaro L., Mineo .M. Wit E.C. (2013). dgLARS: differential geometric approach sparse generalized linear models, Journal Royal Statistical Society. Series B, Vol 75(3), 471-498. Wit E.C. McClure J. (2004). Statistics Microarrays: Design, Analysis Inference, Chichester: Wiley.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/breast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breast Cancer microarray experiment — breast","text":"","code":"data(breast) str(breast) #> 'data.frame':\t52 obs. of  288 variables: #>  $ status           : int  1 0 1 1 1 0 1 1 1 0 ... #>  $ CEB108.T7        : num  0.1142 -0.1098 -0.0141 -0.0899 0.1124 ... #>  $ X1PTEL06         : num  0.2439 -0.137 -0.1602 -0.0823 0.0139 ... #>  $ CDC2L1.p58.      : num  -0.0276 -0.0661 -0.1132 -0.1625 -0.121 ... #>  $ PRKCZ            : num  -0.2692 0.179 -0.0151 -0.0481 0.131 ... #>  $ TP73             : num  -0.1972 -0.078 -0.0566 -0.064 -0.003 ... #>  $ D1S2660          : num  -0.02225 -0.00602 -0.04291 -0.2269 -0.00501 ... #>  $ D1S214           : num  -0.0987 0.0797 0.1579 0.0564 0.2708 ... #>  $ D1S1635          : num  -0.2231 -0.2692 -0.207 -0.0387 -0.2219 ... #>  $ D1S199           : num  -0.1791 -0.1696 -0.0943 0.0411 -0.001 ... #>  $ FGR.SRC2.        : num  -0.159 -0.2169 -0.0987 -0.2705 -0.1602 ... #>  $ MYCL1.LMYC.      : num  -0.219 -0.475 -0.25 -0.439 -0.489 ... #>  $ D1S427.FAF1      : num  0.29639 0.16551 -0.00702 -0.01309 0.06672 ... #>  $ D1S500           : num  -0.0534 -0.0305 0.0989 0.0834 0.0237 ... #>  $ D1S418           : num  -0.2679 0.1458 0.0247 -0.0233 -0.1143 ... #>  $ NRAS             : num  0.0788 -0.3106 -0.0812 -0.1358 -0.3133 ... #>  $ D1S2465.D1S3402  : num  0.823 0.207 0.251 0.268 0.273 ... #>  $ WI.5663.WI.13414 : num  -0.3271 -0.4323 -0.2157 -0.0492 -0.2332 ... #>  $ LAMC2            : num  -0.14 -0.342 -0.109 -0.364 -0.526 ... #>  $ PTGS2.COX2.      : num  0.167 0.18 0.14 0.12 0.17 ... #>  $ TGFB2            : num  0.9501 0.0325 0.1266 -0.064 -0.0576 ... #>  $ AKT3             : num  0.3008 0.0751 0.1544 -0.1347 -0.0243 ... #>  $ SHGC.18290       : num  -0.294 -0.524 -0.145 -0.26 -0.064 ... #>  $ X1QTEL10         : num  0.0212 -0.312 -0.1065 0.0649 -0.0619 ... #>  $ U32389           : num  -0.7487 0.0834 0.1527 0.0554 0.1258 ... #>  $ X2PTEL27         : num  0.2167 0.0431 -0.0619 -0.1244 -0.0608 ... #>  $ MYCN.N.myc.      : num  -0.146 -0.393 -0.226 -0.198 -0.423 ... #>  $ MSH2.KCNK12      : num  -0.1555 0.0237 0.0266 0.1007 0.0971 ... #>  $ REL              : num  1.042 -0.691 -0.32 -0.223 -0.456 ... #>  $ GNLY             : num  -0.1851 0.002 0.0602 0.0469 0.0354 ... #>  $ SGC34236         : num  0.1947 0.0573 0.1319 -0.045 0.0305 ... #>  $ BIN1             : num  -0.5621 -0.3567 -0.3202 -0.0943 -0.4095 ... #>  $ LRP1B            : num  0.0276 -0.0336 0.0286 -0.1233 0.0218 ... #>  $ TBR1             : num  0.65285 0.00995 -0.13353 -0.08121 -0.21072 ... #>  $ ITGA4            : num  0.1519 0.0535 0.1231 0.1249 0.1956 ... #>  $ CASP8            : num  -0.269 -0.494 -0.183 -0.167 -0.24 ... #>  $ ERBB4.HER.4.     : num  0.0344 0.1773 -0.2132 -0.2408 -0.1755 ... #>  $ WI.6310          : num  0.045 0.4337 0.0853 0.063 0.0971 ... #>  $ D2S447           : num  0.1501 0.2247 0.1115 0.0705 0.145 ... #>  $ X3PTEL25         : num  -0.1543 0.0898 0.1133 0.2539 0.2523 ... #>  $ X3PTEL01.CHL1    : num  0.0194 0.3605 0.0402 0.1053 0.0469 ... #>  $ VHL              : num  0.55331 -0.10536 -0.08665 0.001 0.00797 ... #>  $ RAF1             : num  0.3729 0.2889 0.207 0.0714 0.1249 ... #>  $ THRB             : num  0.124 0.2231 -0.0171 0.1621 0.0733 ... #>  $ MLH1             : num  -0.17198 0.06953 -0.17316 -0.00501 -0.16487 ... #>  $ RASSF1           : num  -0.6463 -0.172 -0.0315 0.0507 -0.0182 ... #>  $ FHIT             : num  0.0989 0.1638 -0.3243 -0.1851 -0.2705 ... #>  $ p44S10           : num  -0.0877 0.0705 0.0402 0.0686 -0.1661 ... #>  $ D3S1274..ROBO1   : num  -0.0346 -0.1065 -0.0888 -0.0419 -0.091 ... #>  $ RBP1.RBP2        : num  -0.0111 -0.0651 0.2207 0.0488 0.1071 ... #>  $ TERC             : num  0.4259 0.0723 -0.0899 -0.0161 -0.2549 ... #>  $ EIF5A2           : num  0.459 0.16 -0.338 -0.12 -0.177 ... #>  $ PIK3CA           : num  -0.0278 -0.089 -0.2029 -0.5361 -0.7744 ... #>  $ TP63             : num  0.0478 -0.2653 -0.0356 -0.0161 -0.0387 ... #>  $ MFI2             : num  -0.2614 0.1098 0.1089 0.0431 0.1441 ... #>  $ X3QTEL05         : num  0.2723 0.3674 0.0119 0.0109 0.0554 ... #>  $ GS10K2.T7        : num  -0.0747 -0.2058 -0.1815 -0.1924 -0.091 ... #>  $ SHGC4.207        : num  -0.25877 0.08066 0.10346 -0.11429 -0.00803 ... #>  $ D4S114           : num  0.00698 -0.23699 -0.10536 0.05543 -0.00602 ... #>  $ WHSC1            : num  0.50259 -0.40347 -0.16487 0.00499 -0.09541 ... #>  $ DDX15            : num  -0.2083 -0.1684 0.0714 -0.0398 -0.0429 ... #>  $ KIT              : num  0.3199 -0.0694 0.1124 0.1089 0.0944 ... #>  $ PDGFRA           : num  0.0235 -0.1165 -0.1065 -0.2408 -0.2446 ... #>  $ EIF4E            : num  0.00787 -0.23572 -0.18995 0.04784 -0.05869 ... #>  $ PGRMC2           : num  -0.01106 0.12487 0.11422 -0.001 0.00598 ... #>  $ PDZ.GEF1         : num  0.1689 0.1638 0.0526 0.077 0.0188 ... #>  $ X4QTEL11         : num  -0.1497 0.1997 0.2562 -0.2269 0.0807 ... #>  $ D4S2930          : num  -0.4155 -0.2357 -0.2395 -0.172 -0.0877 ... #>  $ C84C11.T3        : num  0.0998 0.2577 0.39 0.3743 0.3695 ... #>  $ D5S23            : num  0.329 0.641 0.449 0.313 0.5 ... #>  $ D5S2064          : num  -0.00602 0.01292 0.01587 -0.03459 -0.01309 ... #>  $ DAB2             : num  -0.1567 -0.2182 0.131 0.2239 0.0188 ... #>  $ DHFR.MSH3        : num  0.833 0.286 0.188 0.179 0.194 ... #>  $ APC              : num  -0.414 -0.3813 -0.091 -0.0747 -0.2771 ... #>  $ EGR1             : num  0.1284 -0.0274 -0.0877 -0.091 -0.0598 ... #>  $ CSF1R            : num  0.4001 -0.478 -0.1054 -0.0243 -0.0856 ... #>  $ NIB1408          : num  -0.0715 0.4434 0.2585 0.0218 0.3038 ... #>  $ X5QTEL70         : num  -0.0965 0.2231 0.1284 -0.1165 0.0723 ... #>  $ X9PTEL48         : num  0.255 0.187 0.21 0.141 0.166 ... #>  $ PIM1             : num  0.0788 -0.0263 0.0459 0.1089 0.0779 ... #>  $ CCND3            : num  -0.00451 -0.17198 -0.02634 -0.11766 -0.10203 ... #>  $ D6S414           : num  0.0554 0.1947 0.0198 0.0178 0.0723 ... #>  $ HTR1B            : num  -0.0943 -0.0356 -0.002 -0.0284 0.0109 ... #>  $ D6S434           : num  0.7154 0.044 -0.0987 0.1071 0.0695 ... #>  $ D6S268           : num  -0.0608 -0.2679 -0.212 -0.1863 -0.045 ... #>  $ MYB              : num  0.108 0.0119 -0.0336 -0.0121 0.0459 ... #>  $ D6S311           : num  0.45 0.23 0.127 0.201 0.273 ... #>  $ ESR1             : num  0.7575 -0.2877 -0.2957 -0.0182 -0.0769 ... #>  $ X6QTEL54         : num  -0.609 -0.819 -0.56 -0.562 -0.37 ... #>  $ G31341           : num  -0.3025 0.0373 -0.1267 0.1432 -0.1381 ... #>  $ IL6              : num  0.0237 0.1672 0.1484 0.1638 0.1007 ... #>  $ EGFR             : num  -0.405 -0.205 -0.136 -0.201 -0.273 ... #>  $ ELN              : num  -0.1567 -0.2206 -0.0932 -0.1997 -0.0812 ... #>  $ RFC2.CYLN2       : num  -0.0367 0.198 0.1035 0.0383 0.1151 ... #>  $ ABCB1.MDR1.      : num  0.168 -0.154 -0.217 -0.13 -0.263 ... #>  $ CDK6             : num  -0.091 -0.2666 0.0611 0.1089 0.0816 ... #>  $ SERPINE1         : num  -0.0758 0.03922 -0.00702 0.0373 0.01587 ... #>  $ MET              : num  0.459 0.128 0.134 -0.002 -0.079 ... #>  $ TIF1             : num  -0.2408 -0.0726 -0.0492 0.2677 -0.0683 ... #>   [list output truncated] table(breast$status) #>  #>  0  1  #> 23 29   if (FALSE) { # \\dontrun{   fit <- islasso.path(status ~ ., data = breast, family = binomial(),                       alpha = 0, control = is.control(trace = 2L))   temp <- GoF.islasso.path(fit)   lambda.aic <- temp$lambda.min[\"AIC\"]   fit.aic <- islasso(status ~ ., data = breast, family = binomial(),                      alpha = 0, lambda = lambda.aic)   summary(fit.aic, pval = 0.05) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"confint method for islasso objects — confint.islasso","title":"confint method for islasso objects — confint.islasso","text":"Computes confidence intervals islasso objects using Wald-type approach.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"confint method for islasso objects — confint.islasso","text":"","code":"# S3 method for class 'islasso' confint(object, parm, level = 0.95, type.ci = \"wald\", trace = TRUE, ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"confint method for islasso objects — confint.islasso","text":"object fitted model object class \"islasso\". parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. type.ci Character. Wald-type confidence intervals implemented yet! Set type.ci = \"wald\" use estimates standard errors build confidence interval. trace Logical. TRUE (default), bar shows iterations status. ... Additional arguments methods.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"confint method for islasso objects — confint.islasso","text":"confint method islasso objects","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"confint method for islasso objects — confint.islasso","text":"Maintainer: Gianluca Sottile <gianluca.sottile@unipa.>","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/confint.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"confint method for islasso objects — confint.islasso","text":"","code":"n <- 100; p <- 100; p1 <- 10 beta.veri <- sort(round(c(seq(0.5, 3, length.out = p1 / 2),                           seq(-1, -2, length.out = p1 / 2)), 2)) beta <- c(beta.veri, rep(0, p - p1)) sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) o <- islasso(y ~ ., data = sim$data, family = gaussian())  ci <- confint(o, type.ci = \"wald\", parm = 1:11) ci #>              2.5 %    97.5 %  #> (Intercept)  -0.1670   0.1844 #> X1           -2.1205  -1.7329 #> X2           -1.8034  -1.4229 #> X3           -1.6206  -1.2367 #> X4           -1.4054  -1.0080 #> X5           -1.0053  -0.6189 #> X6            0.2125   0.5971 #> X7            0.7503   1.1287 #> X8            1.4421   1.8337 #> X9            2.1272   2.5349 #> X10           2.6811   3.0830 plot(ci)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"Blood and other measurements in diabetics — diabetes","title":"Blood and other measurements in diabetics — diabetes","text":"diabetes data frame contains 442 observations used Efron et al. \"Least Angle Regression\" paper.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Blood and other measurements in diabetics — diabetes","text":"data frame 442 rows 3 columns: x Matrix 10 numeric columns (standardized) y Numeric response vector x2 Matrix 64 columns including interactions","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Blood and other measurements in diabetics — diabetes","text":"https://web.stanford.edu/~hastie/Papers/LARS/LeastAngle_2002.ps","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blood and other measurements in diabetics — diabetes","text":"x matrix standardized unit L2 norm zero mean column. x2 matrix extends x adding selected interaction terms.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Blood and other measurements in diabetics — diabetes","text":"Efron, Hastie, Johnstone Tibshirani (2003). \"Least Angle Regression\" (discussion), Annals Statistics.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/diabetes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blood and other measurements in diabetics — diabetes","text":"","code":"data(diabetes) str(diabetes) #> 'data.frame':\t442 obs. of  3 variables: #>  $ x : 'AsIs' num [1:442, 1:10] 0.03808 -0.00188 0.0853 -0.08906 0.00538 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:10] \"age\" \"sex\" \"bmi\" \"map\" ... #>  $ y : num  151 75 141 206 135 97 138 63 110 310 ... #>  $ x2: 'AsIs' num [1:442, 1:64] 0.03808 -0.00188 0.0853 -0.08906 0.00538 ... #>   ..- attr(*, \".Names\")= chr [1:28288] \"age\" \"age\" \"age\" \"age\" ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:442] \"1\" \"2\" \"3\" \"4\" ... #>   .. ..$ : chr [1:64] \"age\" \"sex\" \"bmi\" \"map\" ... summary(diabetes$y) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    25.0    87.0   140.5   152.1   211.5   346.0   if (FALSE) { # \\dontrun{   fit <- islasso(y ~ ., data = data.frame(y = diabetes$y, diabetes$x2),                  family = gaussian())   summary(fit, pval = 0.05)   lambda.aic <- aic.islasso(fit, interval = c(1, 100))   fit.aic <- update(fit, lambda = lambda.aic)   summary(fit.aic, pval = 0.05) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/is.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Settings for islasso Model Fitting — is.control","title":"Control Settings for islasso Model Fitting — is.control","text":"Auxiliary function used configure customize fitting process islasso models.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/is.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Settings for islasso Model Fitting — is.control","text":"","code":"is.control(   sigma2 = -1,   tol = 1e-05,   itmax = 1000,   stand = TRUE,   trace = 0,   nfolds = 5,   seed = NULL,   adaptive = FALSE,   g = 0.5,   b0 = NULL,   V0 = NULL,   c = 0.5 )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/is.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Settings for islasso Model Fitting — is.control","text":"sigma2 Numeric. Fixed value dispersion parameter. -1 (default), estimated data. tol Numeric. Tolerance level declare convergence. Default 1e-5. itmax Integer. Maximum number iterations. Default 1000. stand Logical. TRUE (default), standardizes covariates fitting. Returned coefficients remain original scale. trace Integer. Controls verbosity iterative procedure: 0 - printing, 1 - compact printing, 2 - detailed printing, 3 - compact printing Fisher scoring info (GLM). nfolds Integer. Number folds CV lambda missing islasso. Defaults 5. seed Optional. Integer seed reproducibility cross-validation. adaptive Logical. TRUE, fits adaptive LASSO. (Experimental) g Numeric [0,1]. Governs BIC selection: g = 0 standard BIC; g = 0.5 extended BIC. b0 Optional. Starting values regression coefficients. NULL, uses glmnet estimates. V0 Optional. Initial covariance matrix. Defaults identity matrix NULL. c Numeric. Controls weight induced smoothed LASSO. Default 0.5; use -1 recompute every iteration.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/is.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Settings for islasso Model Fitting — is.control","text":"list control parameters use islasso.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/is.control.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Control Settings for islasso Model Fitting — is.control","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Functions — islasso-internal","title":"Internal Functions — islasso-internal","text":"Internal islasso functions.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Functions — islasso-internal","text":"","code":"qqNorm(x, probs = seq(0.005, 0.995, length.out = 200), centre = FALSE,   scale = FALSE, leg = TRUE, mean = 0, sd = 1, dF = FALSE, ylab = NULL,   color = \"black\", ...) modelX(n, p, rho=.5, scale.data=TRUE) lminfl(mod, tol = 1e-8) is.influence(model, do.coef = TRUE) islasso.diag(glmfit) islasso.diag.plots(glmfit, glmdiag = islasso.diag(glmfit),   subset = NULL, iden = FALSE, labels = NULL, ret = FALSE) predislasso(object, newdata, type = c(\"response\", \"terms\"),   terms = NULL, na.action = na.pass, ...)  .checkinput(X, y, family, alpha, intercept, weights, offset,   unpenalized, control) .startpoint(X, y, lambda, alpha, weights, offset, mustart,   family, intercept, setting) .islasso(prep, start, Lambda, fam, link)  checkinput.islasso.path(X, y, family, lambda, nlambda, lambda.min.ratio,   alpha, intercept, weights, offset, unpenalized, control) startpoint.islasso.path(X, y, lambda, alpha, weights, offset, mustart,   family, intercept, setting) islasso.path.fit.glm(prep, start, lambda, fam, link)  interpolate(y1, y2, x1, x2, x.new) create_coef_plot(coef1, loglambda, label, id.best, gof, dots, active,   unactive, legend, nlambda) create_se_plot(se1, coef1, loglambda, label, id.best, gof, dots,   active, unactive, legend, nlambda) create_weight_plot(weight1, coef1, loglambda, label, id.best, gof, dots,   active, unactive, legend, nlambda) calculate_gradient(object, lambda, nlambda, intercept) create_gradient_plot(grad, coef1, lambda, label, id.best, gof, dots,   active, unactive, legend, nlambda) create_gof_plot(object, loglambda, id.best, gof, dots)  makeHyp(cnames, hypothesis, rhs = NULL) printHyp(L, b, nms) cislasso(object, a, ci) ci.fitted.islasso(object, newx, ci = NULL, type.ci = \"wald\",   conf.level=.95, only.ci = FALSE)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso-internal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal Functions — islasso-internal","text":"Gianluca Sottile (gianluca.sottile@unipa.)","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal Functions — islasso-internal","text":"functions intended users.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"package implements induced smoothed approach hypothesis testing Lasso regression. Fits regression models smoothed L1 penalty induced smoothing paradigm. Supports linear, logistic, Poisson, Gamma responses. Enables reliable standard errors Wald-based inference.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"","code":"islasso(   formula,   family = gaussian,   lambda,   alpha = 1,   data,   weights,   subset,   offset,   unpenalized,   contrasts = NULL,   control = is.control() )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"formula symbolic formula describing model. family Response distribution. Can gaussian, binomial, poisson, Gamma. lambda Regularization parameter. missing, estimated via cv.glmnet. alpha Elastic-net mixing parameter (\\(0 \\le \\alpha \\le 1\\)). data data frame environment containing variables model. weights Observation weights. Defaults 1. subset Optional vector specifying subset rows include. offset Optional numeric vector offsets linear predictor. unpenalized Vector indicating variables (name index) exclude penalization. contrasts Optional contrasts specification factor variables. control list parameters control model fitting. See .control.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"list components : coefficients Estimated coefficients se Standard errors fitted.values Fitted values deviance, aic, null.deviance Model diagnostic metrics residuals, weights IWLS residuals weights df.residual, df.null, rank Degrees freedom converged Logical; convergence status model, call, terms, formula, data, offset Model objects xlevels, contrasts Factor handling details lambda, alpha, dispersion Model parameters internal internal values","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"islasso fits generalized linear models L1 penalty selected coefficients. returns point estimates full covariance matrices, enabling standard error-based inference. Related methods include: summary.islasso, predict.islasso, logLik.islasso, deviance.islasso, residuals.islasso. islasso.path fits regularization paths using Induced Smoothed Lasso. computes coefficients standard errors across grid lambda values. Companion methods include: summary.islasso.path, predict.islasso.path, logLik.islasso.path, residuals.islasso.path, coef.islasso.path, fitted.islasso.path. non-smooth L1 penalty replaced smooth approximation, enabling inference standard errors Wald tests. approach controls type-error shows strong power various simulation settings.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"Cilluffo, G., Sottile, G., La Grutta, S., Muggeo, VMR (2019). *Induced Smoothed lasso: practical framework hypothesis testing high dimensional regression*, Statistical Methods Medical Research. DOI: doi:10.1177/0962280219842890 Sottile, G., Cilluffo, G., Muggeo, VMR (2019). *R package islasso: estimation hypothesis testing lasso regression*. Technical Report ResearchGate. DOI: doi:10.13140/RG.2.2.16360.11521 Cilluffo G., Sottile G., La Grutta S., Muggeo V.M.R. (2019) Induced Smoothed Lasso: practical framework hypothesis testing high dimensional regression. Statistical Methods Medical Research. DOI: 10.1177/0962280219842890 Sottile G., Cilluffo G., Muggeo V.M.R. (2019) R package islasso: estimation hypothesis testing lasso regression. Technical Report. DOI: 10.13140/RG.2.2.16360.11521","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"Gianluca Sottile, based preliminary work Vito Muggeo. Maintainer: gianluca.sottile@unipa.Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Induced Smoothed Lasso: A practical framework for hypothesis testing in high dimensional regression — islasso","text":"","code":"n <- 100; p <- 100  beta <- c(rep(1, 5), rep(0, p - 5)) sim1 <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) o <- islasso(y ~ ., data = sim1$data, family = gaussian())  summary(o, pval = 0.05) #>  #> Call: #> islasso(formula = y ~ ., family = gaussian(), data = sim1$data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.72365 -0.38639 -0.03156  0.44823  1.44143  #>  #>             Estimate Std. Error     Df z value Pr(>|z|)     #> (Intercept) 0.008689   0.079531  1.000   0.109    0.913     #> X1          0.808500   0.087765  1.000   9.212   <2e-16 *** #> X2          0.879434   0.088049  1.000   9.988   <2e-16 *** #> X3          0.904605   0.085218  1.000  10.615   <2e-16 *** #> X4          0.790340   0.087256  1.000   9.058   <2e-16 *** #> X5          0.972696   0.089154  1.000  10.910   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for gaussian family taken to be 0.6325138) #>  #>     Null deviance: 611.761  on 99.00  degrees of freedom #> Residual deviance:  41.728  on 65.97  degrees of freedom #> AIC: 109.78 #> Lambda: 8.7348 #>  #> Number of Newton-Raphson iterations: 102 #>  coef(o) #>   (Intercept)            X1            X2            X3            X4  #>  8.689109e-03  8.085002e-01  8.794339e-01  9.046052e-01  7.903400e-01  #>            X5            X6            X7            X8            X9  #>  9.726956e-01 -8.702541e-07 -1.472977e-02  6.886191e-07  3.698346e-02  #>           X10           X11           X12           X13           X14  #> -1.898524e-07  1.651990e-02  2.064551e-07 -1.996664e-07  1.371775e-07  #>           X15           X16           X17           X18           X19  #>  6.807706e-08 -2.622097e-03  1.683178e-07 -6.042710e-03 -4.798242e-02  #>           X20           X21           X22           X23           X24  #>  2.606441e-02  7.338383e-02 -6.269821e-03 -1.935021e-02  8.506026e-02  #>           X25           X26           X27           X28           X29  #>  1.383303e-02  3.000629e-03 -1.126651e-04 -3.326426e-03  4.293873e-02  #>           X30           X31           X32           X33           X34  #>  7.528465e-07 -5.097298e-07 -7.689730e-07  1.709048e-07  8.431612e-07  #>           X35           X36           X37           X38           X39  #>  3.280254e-08  5.653197e-03  6.438007e-07 -9.286658e-07 -1.500947e-02  #>           X40           X41           X42           X43           X44  #> -2.767957e-03  3.509988e-07  5.655459e-06  3.511654e-07 -2.113713e-02  #>           X45           X46           X47           X48           X49  #> -1.224452e-02 -6.089917e-07  1.397736e-02  1.138388e-02 -7.723049e-03  #>           X50           X51           X52           X53           X54  #>  2.993860e-02  3.348782e-06  2.410882e-07 -9.666186e-07  5.419647e-02  #>           X55           X56           X57           X58           X59  #> -6.485534e-07 -2.814191e-03 -3.317488e-07  1.384525e-02  3.423789e-07  #>           X60           X61           X62           X63           X64  #>  1.546772e-07  2.290412e-02  1.501548e-02  2.124688e-02 -5.118178e-07  #>           X65           X66           X67           X68           X69  #>  3.009207e-03 -2.795136e-07  2.989569e-02  3.485097e-07 -4.309710e-08  #>           X70           X71           X72           X73           X74  #>  1.319178e-02  9.380076e-07  2.753654e-07 -1.680304e-08  2.201102e-02  #>           X75           X76           X77           X78           X79  #>  9.262371e-07 -2.648323e-07 -6.235187e-07  1.378750e-07  8.072261e-07  #>           X80           X81           X82           X83           X84  #> -6.102942e-03  9.090268e-07  4.337735e-07 -1.586795e-01  4.761674e-02  #>           X85           X86           X87           X88           X89  #>  9.409502e-02  1.379337e-07 -7.386521e-02  2.183171e-07 -8.937826e-02  #>           X90           X91           X92           X93           X94  #>  1.764915e-07 -9.351897e-07 -2.725937e-02 -4.346469e-07 -5.672924e-07  #>           X95           X96           X97           X98           X99  #>  1.376960e-02 -6.164901e-03  8.374049e-07 -9.556129e-07 -1.474438e-07  #>          X100  #>  4.786203e-07  fitted(o) #>           1           2           3           4           5           6  #>  0.46781602  2.26807010  0.31027779  0.23506786 -1.69625406  3.68802029  #>           7           8           9          10          11          12  #>  1.15765892  2.23475415  1.14905619  1.61994717  1.37870156  0.98085302  #>          13          14          15          16          17          18  #>  1.03967193 -5.58638544  0.88134521  2.37548722 -0.32880864 -1.05311781  #>          19          20          21          22          23          24  #> -0.54556131  2.67991974  0.74371292  2.30259530 -0.58758994 -5.71205524  #>          25          26          27          28          29          30  #>  0.41826363  3.89719615 -2.59045759 -3.24743859 -2.00921182 -0.26502725  #>          31          32          33          34          35          36  #> -1.89076346 -4.25443792 -1.10415133 -0.24205092 -0.84981450 -1.40971480  #>          37          38          39          40          41          42  #>  1.28987462 -1.54665904  0.47457646  0.78352484 -1.09790340  2.48694842  #>          43          44          45          46          47          48  #> -0.59799526 -0.28937117 -2.40352036 -6.89024976  1.43043238  0.03376507  #>          49          50          51          52          53          54  #> -0.61616936 -0.10427026  3.07383474 -0.21704241 -0.46706555 -3.94696147  #>          55          56          57          58          59          60  #>  0.30311899  2.40173617 -2.54339450 -2.98754473 -2.99209862  1.71038476  #>          61          62          63          64          65          66  #>  0.54320419  2.34733082  1.94954423  1.22131026  0.38959094  3.01518492  #>          67          68          69          70          71          72  #> -2.82457729 -0.23246183  0.91149850  1.33085743  1.59714747 -1.52870708  #>          73          74          75          76          77          78  #>  0.12771534  1.66423258 -1.47672822 -0.06552089 -0.74863996  2.69910290  #>          79          80          81          82          83          84  #>  0.99523696  3.04630422 -1.06649403  0.16110829  0.86732786 -3.85023081  #>          85          86          87          88          89          90  #>  3.07415393  1.32666851  0.07466885 -1.26536667 -2.92667524 -0.14759037  #>          91          92          93          94          95          96  #> -0.61403922  4.35478328  0.83649237  0.07335727  5.36954695 -2.47468965  #>          97          98          99         100  #>  2.68335335 -1.86881247 -1.01815091 -1.42565104  predict(o, type=\"response\") #>           1           2           3           4           5           6  #>  0.46781602  2.26807010  0.31027779  0.23506786 -1.69625406  3.68802029  #>           7           8           9          10          11          12  #>  1.15765892  2.23475415  1.14905619  1.61994717  1.37870156  0.98085302  #>          13          14          15          16          17          18  #>  1.03967193 -5.58638544  0.88134521  2.37548722 -0.32880864 -1.05311781  #>          19          20          21          22          23          24  #> -0.54556131  2.67991974  0.74371292  2.30259530 -0.58758994 -5.71205524  #>          25          26          27          28          29          30  #>  0.41826363  3.89719615 -2.59045759 -3.24743859 -2.00921182 -0.26502725  #>          31          32          33          34          35          36  #> -1.89076346 -4.25443792 -1.10415133 -0.24205092 -0.84981450 -1.40971480  #>          37          38          39          40          41          42  #>  1.28987462 -1.54665904  0.47457646  0.78352484 -1.09790340  2.48694842  #>          43          44          45          46          47          48  #> -0.59799526 -0.28937117 -2.40352036 -6.89024976  1.43043238  0.03376507  #>          49          50          51          52          53          54  #> -0.61616936 -0.10427026  3.07383474 -0.21704241 -0.46706555 -3.94696147  #>          55          56          57          58          59          60  #>  0.30311899  2.40173617 -2.54339450 -2.98754473 -2.99209862  1.71038476  #>          61          62          63          64          65          66  #>  0.54320419  2.34733082  1.94954423  1.22131026  0.38959094  3.01518492  #>          67          68          69          70          71          72  #> -2.82457729 -0.23246183  0.91149850  1.33085743  1.59714747 -1.52870708  #>          73          74          75          76          77          78  #>  0.12771534  1.66423258 -1.47672822 -0.06552089 -0.74863996  2.69910290  #>          79          80          81          82          83          84  #>  0.99523696  3.04630422 -1.06649403  0.16110829  0.86732786 -3.85023081  #>          85          86          87          88          89          90  #>  3.07415393  1.32666851  0.07466885 -1.26536667 -2.92667524 -0.14759037  #>          91          92          93          94          95          96  #> -0.61403922  4.35478328  0.83649237  0.07335727  5.36954695 -2.47468965  #>          97          98          99         100  #>  2.68335335 -1.86881247 -1.01815091 -1.42565104  plot(o)  #> TableGrob (2 x 2) \"arrange\": 4 grobs #>   z     cells    name           grob #> 1 1 (1-1,1-1) arrange gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[layout] #> 3 3 (2-2,1-1) arrange gtable[layout] #> 4 4 (2-2,2-2) arrange gtable[layout] residuals(o) #>            1            2            3            4            5            6  #> -0.530628992 -1.007609514 -0.349655673 -0.649570131 -0.147081613  0.208147626  #>            7            8            9           10           11           12  #>  0.116945426  0.722968614 -0.297716775  1.149034797  0.424193925  0.770099643  #>           13           14           15           16           17           18  #> -0.727267444 -1.522380376  0.241474500 -0.049620132 -0.191926344  0.035540624  #>           19           20           21           22           23           24  #> -0.894662460  1.441426662 -0.006160725 -0.524481774 -0.462885157 -0.005279323  #>           25           26           27           28           29           30  #> -1.723646103 -0.079863684 -0.284960368 -0.786096291  0.209195576 -0.134101141  #>           31           32           33           34           35           36  #>  0.493550145 -0.342619235  0.465280807 -1.220997633  1.219438955  0.188440722  #>           37           38           39           40           41           42  #>  0.454951725 -0.775142543  1.019102093  0.755559273  0.568076230  0.044554118  #>           43           44           45           46           47           48  #>  0.269591337  0.639329973 -0.830528646 -0.359458709 -0.153877355 -0.357769183  #>           49           50           51           52           53           54  #> -0.042659679 -0.068059823  0.711636953  0.394279647 -0.209668618 -0.487438817  #>           55           56           57           58           59           60  #>  0.020219869  0.425597608 -0.825990374 -0.550007660 -0.040364739  0.149939937  #>           61           62           63           64           65           66  #> -0.345774423  0.553832419 -0.409967621 -0.267279355  0.300792213 -0.419044676  #>           67           68           69           70           71           72  #> -0.868954712 -0.049426683 -0.241667929 -0.576517785  0.957092510  0.049532855  #>           73           74           75           76           77           78  #>  0.407841072 -0.022763389  0.844093475 -0.176488833  1.109655841 -0.003998693  #>           79           80           81           82           83           84  #>  0.445994568  1.054746873  0.908410245  0.276907341  0.627612489 -1.239623269  #>           85           86           87           88           89           90  #> -0.917786788  0.859924822  0.840218069 -0.378536500 -0.642585035 -1.497813191  #>           91           92           93           94           95           96  #>  0.758078906  0.405243807  0.125845853 -0.652911356  1.091375780 -0.086217078  #>           97           98           99          100  #>  0.191252596 -0.041742869  0.579273565 -0.047024869  deviance(o) #> [1] 41.72812 AIC(o) #> [1] 109.7844 logLik(o) #> 'log Lik.' -19.86406 (df=35.02813)  if (FALSE) { # \\dontrun{ # for the interaction o <- islasso(y ~ X1 * X2, data = sim1$data, family = gaussian())  ##### binomial ###### beta <- c(c(1,1,1), rep(0, p-3)) sim2 <- simulXy(n = n, p = p, beta = beta, interc = 1, seed = 1,                 size = 100, family = binomial()) o2 <- islasso(cbind(y.success, y.failure) ~ .,               data = sim2$data, family = binomial()) summary(o2, pval = 0.05)  ##### poisson ###### beta <- c(c(1,1,1), rep(0, p-3)) sim3 <- simulXy(n = n, p = p, beta = beta, interc = 1, seed = 1,                 family = poisson()) o3 <- islasso(y ~ ., data = sim3$data, family = poisson()) summary(o3, pval = 0.05)  ##### Gamma ###### beta <- c(c(1,1,1), rep(0, p-3)) sim4 <- simulXy(n = n, p = p, beta = beta, interc = -1, seed = 1,                 dispersion = 0.1, family = Gamma(link = \"log\")) o4 <- islasso(y ~ ., data = sim4$data, family = Gamma(link = \"log\")) summary(o4, pval = 0.05) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Induced Smoothed Lasso Regularization Path — islasso.path","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"Fits sequence penalized regression models using Induced Smoothing Lasso approach grid lambda values. Supports elastic-net penalties generalized linear models: Gaussian, Binomial, Poisson, Gamma.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"","code":"islasso.path(   formula,   family = gaussian(),   lambda = NULL,   nlambda = 100,   lambda.min.ratio = ifelse(nobs < nvars, 0.01, 1e-04),   alpha = 1,   data,   weights,   subset,   offset,   contrasts = NULL,   unpenalized,   control = is.control() )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"formula Model formula type response ~ predictors. family Response distribution. Supported families: gaussian(), binomial(), poisson(), Gamma(). lambda Optional numeric vector lambda values. provided, sequence automatically generated. nlambda Integer. Number lambda values generate lambda missing. Default 100. lambda.min.ratio Smallest lambda fraction lambda.max. Default: 1e-2 nobs < nvars, else 1e-3. alpha Elastic-net mixing parameter: alpha = 1 lasso, alpha = 0 ridge. data Data frame containing model variables. weights Optional observation weights. subset Optional logical numeric vector subset observations. offset Optional vector prior known components linear predictor. contrasts Optional contrast settings factor variables. unpenalized Optional vector variable names indices excluded penalization. control list control parameters via .control.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"list components: call Matched function call. Info Matrix diagnostics: lambda, deviance, degrees freedom, dispersion, iterations, convergence status. GoF Model goodness--fit metrics: AIC, BIC, AICc, GCV, GIC, eBIC. Coef Matrix coefficients across lambda values. SE Matrix standard errors. Weights Matrix mixing weights smoothed penalty. Gradient Matrix gradients smoothed penalty. Linear.predictors, Fitted.values, Residuals Matrices fitted quantities across path. Input List input arguments design matrix. control, formula, model, terms, data, xlevels, contrasts Standard model components.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"function fits regularization path models using induced smoothing paradigm, replacing non-smooth L1 penalty differentiable surrogate. Standard errors returned lambda points, allowing Wald-based hypothesis testing. regularization path spans range lambda values, either user-defined automatically computed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"Cilluffo G., Sottile G., La Grutta S., Muggeo V.M.R. (2019). Induced Smoothed Lasso: practical framework hypothesis testing high dimensional regression. Statistical Methods Medical Research. DOI: 10.1177/0962280219842890 Sottile G., Cilluffo G., Muggeo V.M.R. (2019). R package islasso: estimation hypothesis testing lasso regression. Technical Report. DOI: 10.13140/RG.2.2.16360.11521","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/islasso.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Induced Smoothed Lasso Regularization Path — islasso.path","text":"","code":"n <- 100; p <- 30; p1 <- 10  # number of nonzero coefficients  beta.veri <- sort(round(c(seq(.5, 3, length.out = p1/2),                          seq(-1, -2, length.out = p1/2)), 2)) beta <- c(beta.veri, rep(0, p - p1)) sim1 <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) o <- islasso.path(y ~ ., data = sim1$data,                   family = gaussian(), nlambda = 30L) o #>  #> Call: #> islasso.path(formula = y ~ ., family = gaussian(), nlambda = 30L,  #>     data = sim1$data) #>  #> Coefficients: #>      lambda      df     phi  deviance    logLik #> 1    0.0353 30.9790  1.4072   97.1265 -141.4361 #> 2    0.0485 30.9712  1.4070   97.1268 -141.4362 #> 3    0.0667 30.9605  1.4068   97.1274 -141.4365 #> 4    0.0916 30.9457  1.4066   97.1285 -141.4371 #> 5    0.1257 30.9254  1.4062   97.1305 -141.4381 #> 6    0.1727 30.8974  1.4057   97.1344 -141.4401 #> 7    0.2372 30.8587  1.4050   97.1417 -141.4439 #> 8    0.3257 30.8054  1.4041   97.1554 -141.4510 #> 9    0.4473 30.7317  1.4030   97.1812 -141.4642 #> 10   0.6143 30.6296  1.4016   97.2293 -141.4890 #> 11   0.8437 30.4878  1.4000   97.3192 -141.5351 #> 12   1.1587 29.4555  1.3818   97.4797 -141.6176 #> 13   1.5912 29.0905  1.3787   97.7607 -141.7615 #> 14   2.1853 28.0146  1.3652   98.2776 -142.0251 #> 15   3.0012 27.5673  1.3698   99.2183 -142.5015 #> 16   4.1217 26.9184  1.3810  100.9230 -143.3533 #> 17   5.6606 25.9228  1.4031  103.9412 -144.8266 #> 18   7.7740 22.3593  1.4034  108.9589 -147.1839 #> 19  10.6764 19.9483  1.4640  117.1917 -150.8259 #> 20  14.6625 17.5170  1.5821  130.4956 -156.2023 #> 21  20.1368 14.9479  1.7872  152.0027 -163.8302 #> 22  27.6549 13.3220  2.1816  189.0993 -174.7490 #> 23  37.9800 11.8667  2.8761  253.4760 -189.3988 #> 24  52.1599 10.9019  4.1500  369.7558 -208.2775 #> 25  71.6340  9.7464  6.4075  578.2957 -230.6396 #> 26  98.3787  8.2018 10.1444  931.2362 -254.4610 #> 27 135.1086  5.8536 15.3597 1446.0646 -276.4654 #> 28 185.5517  3.4090 21.7090 2096.8918 -295.0459 #> 29 254.8279  1.9548 27.3788 2684.3632 -307.3953 #> 30 349.9686  1.2498 32.0240 3162.3808 -315.5894 #>   summary(o, lambda = 10, pval = 0.05) #>  #> Call: #> islasso.path(formula = y ~ ., family = gaussian(), nlambda = 30L,  #>     data = sim1$data) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.99684 -0.74992 -0.07064  0.68113  2.75682  #>  #>     Estimate Std. Error z value Pr(>|z|)     #> X1   -1.7574     0.1280 -13.732  < 2e-16 *** #> X2   -1.5041     0.1290 -11.663  < 2e-16 *** #> X3   -1.3583     0.1303 -10.427  < 2e-16 *** #> X4   -1.1141     0.1360  -8.189 2.63e-16 *** #> X5   -0.8420     0.1276  -6.601 4.08e-11 *** #> X7    0.9960     0.1295   7.690 1.47e-14 *** #> X8    1.6094     0.1318  12.211  < 2e-16 *** #> X9    2.3739     0.1332  17.825  < 2e-16 *** #> X10   2.7974     0.1362  20.540  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for  family taken to be 1.451452) #>  #>     Null deviance: 3311.24  on 99.00  degrees of freedom #> Residual deviance: -150.07  on 79.55  degrees of freedom #> AIC: 341.04 #> Lambda: 10 #>  #> Number of Newton-Raphson iterations: 32 #>  coef(o, lambda = 10) #>   (Intercept)            X1            X2            X3            X4  #>  1.419430e-01 -1.757353e+00 -1.504053e+00 -1.358269e+00 -1.114115e+00  #>            X5            X6            X7            X8            X9  #> -8.419879e-01  2.233492e-01  9.960151e-01  1.609426e+00  2.373855e+00  #>           X10           X11           X12           X13           X14  #>  2.797407e+00  9.426526e-03  1.047444e-01  4.157399e-03  6.098024e-02  #>           X15           X16           X17           X18           X19  #>  6.047714e-07  1.812838e-01  3.729639e-02 -7.646930e-02  7.589241e-07  #>           X20           X21           X22           X23           X24  #>  2.482677e-07 -4.254386e-02 -4.260865e-07  1.785697e-03  3.846848e-03  #>           X25           X26           X27           X28           X29  #>  2.485859e-02 -7.597015e-07 -1.467046e-03  2.050808e-01  4.678174e-07  #>           X30  #> -2.105243e-02  fitted(o, lambda = 10) #>            1            2            3            4            5            6  #>  -7.33372135  -1.22751966   3.05928434  -4.61705978   1.30141466 -11.08718465  #>            7            8            9           10           11           12  #>  -5.18491838  -1.40646029   6.55306771  -5.62052384   0.34894354   1.63372128  #>           13           14           15           16           17           18  #>  -3.40300737   1.27310051   3.82308202  -3.48029065   1.62045665   0.46234652  #>           19           20           21           22           23           24  #>  -4.19240461   6.20954940   1.04068246   1.51369417   6.65138746   6.88709546  #>           25           26           27           28           29           30  #>   0.70908941  -8.69208753  -4.10513009  11.65909323   3.80705267   1.17755103  #>           31           32           33           34           35           36  #>  -0.12433214  14.36003621   0.60577280  -8.53343608   4.94045365   9.88682623  #>           37           38           39           40           41           42  #>   5.93981569   0.87948459  -3.26448745  -4.30682762   1.00443673  -7.35378177  #>           43           44           45           46           47           48  #>  12.91330858   1.41808107  -0.23925888   8.40869369   5.05172053   3.64497588  #>           49           50           51           52           53           54  #>  -1.58627191   3.78272123  -1.68651966   0.21730940  -0.27324986   0.96774503  #>           55           56           57           58           59           60  #>  -3.85317437 -11.74956161   7.58473990   5.36133383   2.15519334  -9.11074753  #>           61           62           63           64           65           66  #>  -3.03682786   2.26741932 -13.56657055   1.76699765  -3.92700269  -2.77588333  #>           67           68           69           70           71           72  #>   8.22694073  -6.75548073   3.21363663  -3.00933468   0.18196975   3.53387084  #>           73           74           75           76           77           78  #>  -1.86021587  -3.26539566  -4.76175555  -5.23304028   5.13892706  -0.12888707  #>           79           80           81           82           83           84  #>   5.39047078  -3.74756451   1.27469427   1.87393595  -4.69814434  10.55278794  #>           85           86           87           88           89           90  #>   0.74413618   2.36640852  -4.85420248   6.07682531   6.79852410   0.35144271  #>           91           92           93           94           95           96  #>   1.35933796  -5.95151395   2.19015159   1.31566559  -4.63570003   0.36480625  #>           97           98           99          100  #>  -8.80972385   2.86087944  -9.03175750  -0.02783179  predict(o, type = \"response\", lambda = 10) #>            1            2            3            4            5            6  #>  -7.33372135  -1.22751966   3.05928434  -4.61705978   1.30141466 -11.08718465  #>            7            8            9           10           11           12  #>  -5.18491838  -1.40646029   6.55306771  -5.62052384   0.34894354   1.63372128  #>           13           14           15           16           17           18  #>  -3.40300737   1.27310051   3.82308202  -3.48029065   1.62045665   0.46234652  #>           19           20           21           22           23           24  #>  -4.19240461   6.20954940   1.04068246   1.51369417   6.65138746   6.88709546  #>           25           26           27           28           29           30  #>   0.70908941  -8.69208753  -4.10513009  11.65909323   3.80705267   1.17755103  #>           31           32           33           34           35           36  #>  -0.12433214  14.36003621   0.60577280  -8.53343608   4.94045365   9.88682623  #>           37           38           39           40           41           42  #>   5.93981569   0.87948459  -3.26448745  -4.30682762   1.00443673  -7.35378177  #>           43           44           45           46           47           48  #>  12.91330858   1.41808107  -0.23925888   8.40869369   5.05172053   3.64497588  #>           49           50           51           52           53           54  #>  -1.58627191   3.78272123  -1.68651966   0.21730940  -0.27324986   0.96774503  #>           55           56           57           58           59           60  #>  -3.85317437 -11.74956161   7.58473990   5.36133383   2.15519334  -9.11074753  #>           61           62           63           64           65           66  #>  -3.03682786   2.26741932 -13.56657055   1.76699765  -3.92700269  -2.77588333  #>           67           68           69           70           71           72  #>   8.22694073  -6.75548073   3.21363663  -3.00933468   0.18196975   3.53387084  #>           73           74           75           76           77           78  #>  -1.86021587  -3.26539566  -4.76175555  -5.23304028   5.13892706  -0.12888707  #>           79           80           81           82           83           84  #>   5.39047078  -3.74756451   1.27469427   1.87393595  -4.69814434  10.55278794  #>           85           86           87           88           89           90  #>   0.74413618   2.36640852  -4.85420248   6.07682531   6.79852410   0.35144271  #>           91           92           93           94           95           96  #>   1.35933796  -5.95151395   2.19015159   1.31566559  -4.63570003   0.36480625  #>           97           98           99          100  #>  -8.80972385   2.86087944  -9.03175750  -0.02783179  plot(o, yvar = \"coef\")  residuals(o, lambda = 10) #>            1            2            3            4            5            6  #>  0.203500758 -0.070921088  0.655601438 -0.948292461 -1.292941380  0.031617959  #>            7            8            9           10           11           12  #>  0.534476652 -0.938054664  2.341107305  0.704135489  0.054296638  0.123963203  #>           13           14           15           16           17           18  #> -2.455919333  2.756824803  0.444845290 -1.077745651 -0.957225554 -2.996836042  #>           19           20           21           22           23           24  #> -0.268443807 -1.110295074 -0.175677909  0.756638957  0.732691516 -0.399924545  #>           25           26           27           28           29           30  #> -0.012697210 -1.808746364 -1.769115029  0.080492002 -0.705686605 -0.867954745  #>           31           32           33           34           35           36  #>  0.818314525 -0.539616946  0.387907768 -0.460102359  0.487185482  0.533349627  #>           37           38           39           40           41           42  #>  0.227232446 -0.070367646  1.400655737  1.235397972  0.108949067 -0.804937076  #>           43           44           45           46           47           48  #>  1.808331720 -1.353897571  0.641704960  1.260640190  0.354164189 -0.214549640  #>           49           50           51           52           53           54  #>  1.751864072 -0.162454929 -1.111939382  1.856458881 -0.073545689 -0.021959911  #>           55           56           57           58           59           60  #> -0.950707727 -0.496808471 -0.295716050 -0.007979055 -0.101287323 -0.220969297  #>           61           62           63           64           65           66  #> -0.738191013 -1.345008720  1.219241656 -1.186707655 -0.246818470  1.143297529  #>           67           68           69           70           71           72  #>  0.673460263  1.212373436  2.386493906  1.229814839  0.452816942 -0.009161309  #>           73           74           75           76           77           78  #>  1.433755696 -0.706450678  0.410774191 -0.160249470 -0.072069544  1.719784551  #>           79           80           81           82           83           84  #>  1.206996077 -1.544574482 -0.516246467 -0.478693632 -1.242234274  1.870383884  #>           85           86           87           88           89           90  #> -0.301511577  0.493521563 -1.312221684  1.075241477  1.195504244 -0.056009178  #>           91           92           93           94           95           96  #> -1.028586437 -1.009431470  1.159645432 -0.103428990 -0.530800976 -2.230500039  #>           97           98           99          100  #> -1.414122318  0.720231658 -0.785114819 -0.134236260  deviance(o, lambda = 10) #> [1] 115.4931 logLik(o, lambda = 10) #>  #> 'log Lik.' -150.1 (df = 20.44573) #>  GoF.islasso.path(o)  #> $gof #>            AIC      BIC      AICc     eBIC      GCV      GIC #>  [1,] 344.8300 425.5355 3257.6783 531.9168 593.7821 445.3355 #>  [2,] 344.8148 425.5000 3255.8926 531.8547 593.6491 445.2951 #>  [3,] 344.7940 425.4514 3253.4379 531.7694 593.4666 445.2397 #>  [4,] 344.7656 425.3845 3250.0441 531.6517 593.2149 445.1633 #>  [5,] 344.7270 425.2929 3245.3813 531.4903 592.8701 445.0587 #>  [6,] 344.6750 425.1678 3238.9644 531.2690 592.3976 444.9157 #>  [7,] 344.6052 424.9974 3230.1349 530.9658 591.7513 444.7206 #>  [8,] 344.5127 424.7659 3217.9846 530.5512 590.8690 444.4550 #>  [9,] 344.3917 424.4530 3201.2593 529.9852 589.6675 444.0950 #> [10,] 344.2372 424.0326 3178.2269 529.2144 588.0370 443.6094 #> [11,] 344.0460 423.4720 3146.4555 528.1668 585.8314 442.9581 #> [12,] 342.1461 418.8827 2922.0229 520.0324 569.1420 437.7090 #> [13,] 341.7039 417.4896 2845.9322 517.3859 563.8702 436.0826 #> [14,] 340.0794 413.0621 2630.2105 509.2637 548.1581 430.9675 #> [15,] 340.1376 411.9552 2545.0813 506.6210 543.2257 429.5747 #> [16,] 340.5434 410.6705 2425.7392 503.1081 536.8117 427.8753 #> [17,] 341.4989 409.0323 2251.5789 498.0510 527.8489 425.6007 #> [18,] 339.0863 397.3361 1702.0608 474.1175 488.3275 411.6269 #> [19,] 341.5484 393.5171 1398.7886 462.0194 470.7224 406.2670 #> [20,] 347.4386 393.0732 1143.5818 453.2263 459.1855 404.2691 #> [21,] 357.5562 396.4979  924.7907 447.8287 452.9535 406.0518 #> [22,] 376.1419 410.8480  821.5249 456.5956 465.1862 419.3627 #> [23,] 402.5310 433.4457  752.9937 474.1957 487.6711 441.0302 #> [24,] 438.3587 466.7598  732.9215 504.1967 524.7289 473.7277 #> [25,] 480.7720 506.1630  715.4700 539.6319 566.2844 512.3923 #> [26,] 525.3257 546.6929  691.5674 574.8579 603.9255 551.9351 #> [27,] 564.6379 579.8874  650.7769 599.9885 623.8253 583.6287 #> [28,] 596.9099 605.7910  628.3575 617.4976 632.4797 607.9699 #> [29,] 618.7001 623.7925  630.6034 630.5051 639.5494 625.0419 #> [30,] 633.6783 636.9342  639.4313 641.2260 647.2563 637.7330 #>  #> $minimum #>  AIC  BIC AICc eBIC  GCV  GIC  #>   18   20   28   21   21   20  #>  #> $lambda.min #>        AIC        BIC       AICc       eBIC        GCV        GIC  #>   7.774004  14.662527 185.551724  20.136818  20.136818  14.662527  #>  #> $plot  #>   if (FALSE) { # \\dontrun{ ##### binomial ###### beta <- c(1, 1, 1, rep(0, p - 3)) sim2 <- simulXy(n = n, p = p, beta = beta, interc = 1, seed = 1,                 size = 100, family = binomial()) o2 <- islasso.path(cbind(y.success, y.failure) ~ ., data = sim2$data,                    family = binomial(), lambda = seq(0.1, 100, l = 50L)) temp <- GoF.islasso.path(o2) summary(o2, pval = 0.05, lambda = temp$lambda.min[\"BIC\"])  ##### poisson ###### beta <- c(1, 1, 1, rep(0, p - 3)) sim3 <- simulXy(n = n, p = p, beta = beta, interc = 1, seed = 1,                 family = poisson()) o3 <- islasso.path(y ~ ., data = sim3$data, family = poisson(), nlambda = 30L) temp <- GoF.islasso.path(o3) summary(o3, pval = 0.05, lambda = temp$lambda.min[\"BIC\"])  ##### Gamma ###### beta <- c(1, 1, 1, rep(0, p - 3)) sim4 <- simulXy(n = n, p = p, beta = beta, interc = -1, seed = 1,                 family = Gamma(link = \"log\")) o4 <- islasso.path(y ~ ., data = sim4$data, family = Gamma(link = \"log\"),                    nlambda = 30L) temp <- GoF.islasso.path(o4) summary(o4, pval = .05, lambda = temp$lambda.min[\"BIC\"]) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic Plots for islasso Models — plot.islasso","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"Produces standard diagnostic plots fitted islasso model assess residuals, model fit, variance structure.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"","code":"# S3 method for class 'islasso' plot(x, ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"x object class \"islasso\", typically created via islasso. ... Additional graphical parameters passed underlying plot() functions.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"Generates 2x2 grid diagnostic plots: Top-left: Deviance residuals vs fitted values. Top-right: Normal Q-Q plot standardized deviance residuals (red line = reference). Bottom-left: Squared standardized Pearson residuals vs fitted values. Bottom-right: Working response vector vs linear predictor. plots help assess assumptions linearity, homoscedasticity, residual normality penalized regression.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic Plots for islasso Models — plot.islasso","text":"","code":"if (FALSE) { # \\dontrun{   set.seed(1)   n <- 100; p <- 100   beta <- c(runif(20, -3, 3), rep(0, p - 20))   sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian())   fit <- islasso(y ~ ., data = sim$data, family = gaussian(), lambda = 2)   plot(fit) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"Generates plots coefficient profiles, standard errors, gradients, weights, goodness--fit criteria fitted islasso.path model.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"","code":"# S3 method for class 'islasso.path' plot(   x,   yvar = c(\"coefficients\", \"se\", \"gradient\", \"weight\", \"gof\"),   gof = c(\"none\", \"AIC\", \"BIC\", \"AICc\", \"eBIC\", \"GCV\", \"GIC\"),   label = FALSE,   legend = FALSE,   ... )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"x object class \"islasso.path\", typically created via islasso.path. yvar Character. Specifies display y-axis. Choices : \"coefficients\" - coefficient paths log(lambda), \"se\" - standard errors log(lambda), \"gradient\" - gradient values log(lambda), \"weight\" - mixture weights used smoothing, \"gof\" - goodness--fit values. gof Character. Criterion used highlighting active variables. Choices: \"none\", \"AIC\", \"BIC\", \"AICc\", \"eBIC\", \"GCV\", \"GIC\". label Logical. Whether annotate curves variable names. legend Logical. Whether display plot legend. ... Additional graphical parameters, e.g. main, xlab, ylab, xlim, ylim, lty, col, lwd, cex.axis, cex.lab, cex.main, gof_lty, gof_col, gof_lwd.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"Produces plots. return object.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"function visualizes behavior solution path across sequence lambda values, helping diagnose coefficient shrinkage, influence penalty, variable selection stability.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/plot.islasso.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient Profile and Diagnostic Plots for islasso.path — plot.islasso.path","text":"","code":"if (FALSE) { # \\dontrun{   n <- 100; p <- 30   beta <- c(runif(10, -2, 2), rep(0, p - 10))   sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian())   fit <- islasso.path(y ~ ., data = sim$data, family = gaussian())    plot(fit, yvar = \"coefficients\", gof = \"AICc\", label = TRUE)   plot(fit, yvar = \"se\", gof = \"AICc\")   plot(fit, yvar = \"gradient\", gof = \"AICc\")   plot(fit, yvar = \"gof\", gof = \"AICc\") } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Method for islasso Objects — predict.islasso","title":"Prediction Method for islasso Objects — predict.islasso","text":"Computes predictions fitted islasso model object. Multiple output types supported, including response scale, linear predictor, coefficient values.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Method for islasso Objects — predict.islasso","text":"","code":"# S3 method for class 'islasso' predict(   object,   newdata = NULL,   type = c(\"link\", \"response\", \"coefficients\", \"class\", \"terms\"),   se.fit = FALSE,   ci = NULL,   type.ci = c(\"wald\", \"score\"),   level = 0.95,   terms = NULL,   na.action = na.pass,   ... )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Method for islasso Objects — predict.islasso","text":"object fitted model class \"islasso\". newdata Optional data frame containing predictors prediction. omitted, fitted model matrix used. type Character. Specifies prediction scale: \"link\" (default): linear predictor scale; \"response\": original response scale; \"coefficients\": estimated coefficients; \"class\": predicted class (binomial() family); \"terms\": contribution term linear predictor. se.fit Logical. Whether compute standard errors/confidence intervals. ci Optional. Precomputed matrix confidence intervals (2 columns). type.ci Type interval. \"wald\" implemented. level Confidence level intervals. Default 0.95. terms type = \"terms\", optionally specify terms extract. na.action Function handle missing values newdata. Default: na.pass. ... Additional arguments passed downstream methods.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Method for islasso Objects — predict.islasso","text":"numeric vector, matrix, list depending type.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prediction Method for islasso Objects — predict.islasso","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Method for islasso Objects — predict.islasso","text":"","code":"set.seed(1) n <- 100; p <- 100 beta <- c(runif(20, -3, 3), rep(0, p - 20)) sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian()) fit <- islasso(y ~ ., data = sim$data, family = gaussian(), lambda = 2) predict(fit, type = \"response\") #>            1            2            3            4            5            6  #>   5.21145237  -1.43186355  -1.87707634   3.38862598  -1.92102645   2.98415369  #>            7            8            9           10           11           12  #>  -9.43985904   4.15355250  -2.66779789  -4.14845909   3.46641282  -4.10876731  #>           13           14           15           16           17           18  #>   0.90610289  -2.76134098   1.89852882  -0.60890376  -6.55871515   0.06352742  #>           19           20           21           22           23           24  #>  -2.62533271   0.42070839  -4.82272696  -4.67076935  10.48877879  14.86453464  #>           25           26           27           28           29           30  #>  -4.48649098  -6.37381434   4.09537272  13.60055424   2.07156492   7.50878799  #>           31           32           33           34           35           36  #>  -6.73281383  -0.91646275   9.10929220  11.18502534  -4.52986378  -7.37417357  #>           37           38           39           40           41           42  #>  23.33603867   4.78241357  -1.57391485   5.40950944  -0.46416742  -8.41419768  #>           43           44           45           46           47           48  #>   6.61032726  -2.31682147  -7.40341429 -10.68456568  -0.01351213 -12.36236266  #>           49           50           51           52           53           54  #>  -0.89347286   9.38899357   3.35335057  -0.98732376  -5.27471442  -5.73730247  #>           55           56           57           58           59           60  #>   8.16581897  -5.45944955 -12.85556246  10.86746694 -11.87252793  11.34253371  #>           61           62           63           64           65           66  #>  -3.67302524   4.08943614  -8.00715886  -7.92820503   6.25491158  13.88284885  #>           67           68           69           70           71           72  #>  -6.17176098  14.24448381  -6.76303137   3.31426261 -15.90302166   8.00218489  #>           73           74           75           76           77           78  #>  -2.24816294  -4.95830887   5.03041165  -0.25738149   6.89625712   4.03817956  #>           79           80           81           82           83           84  #> -12.83266376  -0.93735110  -9.93779514  -0.36243304  -0.11087383  10.86588406  #>           85           86           87           88           89           90  #> -10.84340285  -3.02213088 -12.36447903  13.77524184  -2.55117297  -4.87329978  #>           91           92           93           94           95           96  #>   2.21847849  -6.34566460  -2.11714321  -3.08677838  -0.06908000   9.07232136  #>           97           98           99          100  #>  -9.20100578   6.35833233  13.40067379  -0.31352736"},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Method for islasso.path Objects — predict.islasso.path","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"Generates predictions fitted islasso.path model one lambda values. Supports various output types including linear predictors, response scale, class labels, coefficients.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"","code":"# S3 method for class 'islasso.path' predict(   object,   newdata,   type = c(\"link\", \"response\", \"coefficients\", \"class\"),   lambda,   ... )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"object fitted model object class \"islasso.path\". newdata Optional data frame containing covariates prediction. omitted, returns fitted values original model. type Character. Type prediction: \"link\" (default) - linear predictor scale, \"response\" - original response scale, \"coefficients\" - estimated coefficients, \"class\" - predicted class labels (binomial models). lambda Numeric value(s). Specific lambda value(s) predictions required. missing, predictions computed full lambda sequence. ... Additional arguments passed lower-level methods.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"vector, matrix, list depending type requested.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/predict.islasso.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Method for islasso.path Objects — predict.islasso.path","text":"","code":"if (FALSE) { # \\dontrun{   set.seed(1)   n <- 100; p <- 30   beta <- c(runif(10, -3, 3), rep(0, p - 10))   sim <- simulXy(n = n, p = p, beta = beta, seed = 1, family = gaussian())   fit <- islasso.path(y ~ ., data = sim$data, family = gaussian())   optimal <- GoF.islasso.path(fit)   pred <- predict(fit, type = \"response\", lambda = optimal$lambda.min) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/simulXy.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Model Matrix and Response Vector — simulXy","title":"Simulate Model Matrix and Response Vector — simulXy","text":"Generates synthetic covariates response vector specified distribution simulation studies method validation.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/simulXy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Model Matrix and Response Vector — simulXy","text":"","code":"simulXy(   n,   p,   interc = 0,   beta,   family = gaussian(),   prop = 0.1,   lim.b = c(-3, 3),   sigma = 1,   size = 1,   rho = 0,   scale.data = TRUE,   seed = NULL,   X = NULL,   dispersion = 0.1 )"},{"path":"https://gianluca-sottile.github.io/islasso/reference/simulXy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Model Matrix and Response Vector — simulXy","text":"n Integer. Number observations. p Integer. Total number covariates model matrix. interc Numeric. Intercept include linear predictor. Default 0. beta Numeric vector length p. Regression coefficients linear predictor. family Distribution link function. Allowed: gaussian(), binomial(), poisson() , Gamma(). Can string, function, family object. prop Numeric [0,1]. Used beta missing; proportion non-zero coefficients p. Default 0.1. lim.b Numeric vector length 2. Range coefficients beta missing. Default: c(-3, 3). sigma Standard deviation Gaussian response. Default 1. size Integer. Number trials binomial response. Default 1. rho Numeric. Correlation coefficient generating covariates. Used create AR(1)-type covariance: rho^|-j|. Default 0. scale.data Logical. Whether scale columns model matrix. Default TRUE. seed Optional. Integer seed reproducibility. X Optional. Custom model matrix. supplied, overrides internally generated X. dispersion Dispersion parameter Gamma response. Default 0.1.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/simulXy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Model Matrix and Response Vector — simulXy","text":"list components: X Model matrix dimension n x p y Simulated response vector beta True regression coefficients used eta Linear predictor","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/simulXy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Model Matrix and Response Vector — simulXy","text":"","code":"n <- 100; p <- 100 beta <- c(runif(10, -3, 3), rep(0, p - 10)) sim <- simulXy(n = n, p = p, beta = beta, seed = 1234) o <- islasso(y ~ ., data = sim$data, family = gaussian()) summary(o, pval = 0.05) #>  #> Call: #> islasso(formula = y ~ ., family = gaussian(), data = sim$data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.9777 -0.5928 -0.0602  0.5340  2.2449  #>  #>             Estimate Std. Error      Df z value Pr(>|z|)     #> (Intercept)  -0.1159     0.1258   1.000  -0.921  0.35708     #> X1            0.3477     0.1402   0.976   2.480  0.01315 *   #> X2           -2.3120     0.1492   1.000 -15.497  < 2e-16 *** #> X3           -0.4404     0.1437   0.995  -3.064  0.00218 **  #> X4            1.3065     0.1457   1.000   8.967  < 2e-16 *** #> X5           -2.0609     0.1443   1.000 -14.280  < 2e-16 *** #> X6           -0.5635     0.1448   1.000  -3.892 9.96e-05 *** #> X7            1.2906     0.1399   1.000   9.225  < 2e-16 *** #> X8            1.8948     0.1490   1.000  12.719  < 2e-16 *** #> X9           -1.0072     0.1515   1.000  -6.649 2.96e-11 *** #> X10          -2.1626     0.1500   1.000 -14.418  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for gaussian family taken to be 1.583274) #>  #>     Null deviance: 2492.536  on 99.00  degrees of freedom #> Residual deviance:   92.352  on 58.33  degrees of freedom #> AIC: 175.69 #> Lambda: 11.472 #>  #> Number of Newton-Raphson iterations: 102 #>"},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize islasso Fitted Model — summary.islasso","title":"Summarize islasso Fitted Model — summary.islasso","text":"Provides concise summary fitted islasso model, including p-values optional filtering.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize islasso Fitted Model — summary.islasso","text":"","code":"# S3 method for class 'islasso' summary(object, pval = 1, which, use.t = FALSE, type.pval = \"wald\", ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize islasso Fitted Model — summary.islasso","text":"object fitted model class \"islasso\". pval Numeric threshold displaying coefficients. \\(p \\le\\) pval printed. Unpenalized coefficients (like intercepts) always shown. Optional. Specifies subset coefficients test. missing, parameters evaluated. use.t Logical. TRUE, p-values computed using t-distribution residual degrees freedom. type.pval Character. Type p-value approximation. \"wald\" (default) implemented. ... Additional arguments (currently used).","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize islasso Fitted Model — summary.islasso","text":"object class \"summary.islasso\" containing: coefficients Coefficient estimates related statistics pval Threshold used filter coefficients call Original model call","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize islasso Fitted Model — summary.islasso","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize islasso Fitted Model — summary.islasso","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming object `o` from an islasso fit summary(o, pval = 0.1)  # Show coefficients with p <= 0.1 } # }"},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"Extracts coefficient estimates, standard errors p-values islasso.path fit given regularization level lambda.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"","code":"# S3 method for class 'islasso.path' summary(object, pval = 1, use.t = FALSE, lambda, ...)"},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"object fitted object class \"islasso.path\". pval Numeric threshold displaying coefficients. variables p-value <= pval printed. Unpenalized coefficients (like intercept) always shown. use.t Logical. TRUE, p-values computed using t-distribution residual degrees freedom. lambda Numeric. Value regularization parameter summary extracted. ... Currently unused.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"object class \"summary.islasso.path\" containing filtered estimates significance metrics.","code":""},{"path":[]},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"Gianluca Sottile gianluca.sottile@unipa.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/reference/summary.islasso.path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize islasso.path Model at Specific Lambda — summary.islasso.path","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming object `o` is from islasso.path summary(o, pval = 0.1, lambda = 5) } # }"},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-160-2025-07-30","dir":"Changelog","previous_headings":"","what":"islasso 1.6.0 (2025-07-30)","title":"islasso 1.6.0 (2025-07-30)","text":"CRAN release: 2025-07-31","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"performance--refactoring-1-6-0","dir":"Changelog","previous_headings":"","what":"Performance & Refactoring","title":"islasso 1.6.0 (2025-07-30)","text":"Core computational routines cleaned , bugs fixed. Legacy R routines revised, cleaned, commented. Minor inconsistencies addressed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"documentation-1-6-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"islasso 1.6.0 (2025-07-30)","text":"Help files function manuals now fully managed via roxygen2, substantial updates usage examples descriptions.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"visualization-1-6-0","dir":"Changelog","previous_headings":"","what":"Visualization","title":"islasso 1.6.0 (2025-07-30)","text":"plotting functions refactored use ggplot2 framework consistent modern graphics.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"user-experience-1-6-0","dir":"Changelog","previous_headings":"","what":"User Experience","title":"islasso 1.6.0 (2025-07-30)","text":"custom ASCII startup banner added package attach, providing welcoming informative message.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-151","dir":"Changelog","previous_headings":"","what":"islasso 1.5.1","title":"islasso 1.5.1","text":"CRAN release: 2023-05-15 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-150","dir":"Changelog","previous_headings":"","what":"islasso 1.5.0","title":"islasso 1.5.0","text":"CRAN release: 2023-05-08 bugs fixed. S3 methods implemented.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-143","dir":"Changelog","previous_headings":"","what":"islasso 1.4.3","title":"islasso 1.4.3","text":"CRAN release: 2022-03-01 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-142","dir":"Changelog","previous_headings":"","what":"islasso 1.4.2","title":"islasso 1.4.2","text":"CRAN release: 2021-12-06 bugs binomial family fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-141","dir":"Changelog","previous_headings":"","what":"islasso 1.4.1","title":"islasso 1.4.1","text":"CRAN release: 2021-11-16 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-140","dir":"Changelog","previous_headings":"","what":"islasso 1.4.0","title":"islasso 1.4.0","text":"CRAN release: 2021-10-15 New optimization algorithm ‘islasso’ method. algorithm now stable implemented distributions. aic.islasso() function available methods “AIC”, “BIC”, “AICc”, “eBIC”, “GCV”, “GIC”. New class functions named islasso.path created. main function islasso.path() builds coefficient profile fixed sequence lambda values. New function GoF.islasso.path() extracts optimal tuning parameter minimizing fixed criterion. Available criteria aic.islasso(). bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-131","dir":"Changelog","previous_headings":"","what":"islasso 1.3.1","title":"islasso 1.3.1","text":"CRAN release: 2021-06-16 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-130","dir":"Changelog","previous_headings":"","what":"islasso 1.3.0","title":"islasso 1.3.0","text":"CRAN release: 2021-05-24 Vignette added package. bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-123","dir":"Changelog","previous_headings":"","what":"islasso 1.2.3","title":"islasso 1.2.3","text":"bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-122","dir":"Changelog","previous_headings":"","what":"islasso 1.2.2","title":"islasso 1.2.2","text":"CRAN release: 2021-01-22 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-121","dir":"Changelog","previous_headings":"","what":"islasso 1.2.1","title":"islasso 1.2.1","text":"CRAN release: 2021-01-21 bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-120","dir":"Changelog","previous_headings":"","what":"islasso 1.2.0","title":"islasso 1.2.0","text":"CRAN release: 2021-01-21 New implementation estimating algorithm. Now islasso much stabler faster. New function: general linear hypotheses linear combinations regression coefficients, including confidence intervals. Prediction function includes confidence intervals fitted values. Step halving Armijo’s rule improved. Convergence criterion improved. bugs fixed.","code":""},{"path":"https://gianluca-sottile.github.io/islasso/news/index.html","id":"islasso-110","dir":"Changelog","previous_headings":"","what":"islasso 1.1.0","title":"islasso 1.1.0","text":"CRAN release: 2019-06-25 New implementation estimating algorithm. Now islasso much stabler faster, reducing number iterations reach convergence. Step halving Armijo’s rule implemented. Elastic-net approach added via alpha parameter objective function (glmnet). Summary method now includes degrees freedom covariate, choice t-test z-test (Gaussian family). optim.islasso renamed aic.islasso; interval specification longer required. islasso.control renamed .control; control parameters modified. Two trace versions implemented .control: compact (trace = 1) verbose (trace = 2). bugs fixed.","code":""}]
